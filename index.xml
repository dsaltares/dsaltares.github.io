<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David Saltares</title>
    <link>https://saltares.com/</link>
    <description>Recent content on David Saltares</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Mon, 23 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://saltares.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The importance of solid technology strategy and principles</title>
      <link>https://saltares.com/the-importance-of-solid-technology-strategy-and-principles/</link>
      <pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/the-importance-of-solid-technology-strategy-and-principles/</guid>
      <description>By Nick on Unsplash A solid technology strategy is a requirement for building a high-performing engineering organisation that consistently hits business goals. To better understand the importance of technology strategy, we can look at what happens to teams that don’t have one.
It is pretty standard for poor engineering leaders not to have a technology strategy written down and shared with the entire organisation.
Engineering leaders don’t need to think about strategy, and they can come up with a different one every day.</description>
      <content>&lt;p&gt;
  &lt;figure&gt;
    &lt;img class=&#34;figure-image&#34; src=&#34;./img/woman-looking-at-map.jpg&#34; alt=&#34;Woman looking at map&#34;&gt;
    &lt;figcaption&gt;By Nick on &lt;a href=&#34;https://unsplash.com/photos/1tpLdmxki-c&#34;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;A solid technology strategy is a requirement for building a high-performing engineering organisation that consistently hits business goals. To better understand the importance of technology strategy, we can look at what happens to teams that don’t have one.&lt;/p&gt;
&lt;p&gt;It is pretty standard for poor engineering leaders not to have a technology strategy written down and shared with the entire organisation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Engineering leaders don’t need to think about strategy, and they can come up with a different one every day.&lt;/li&gt;
&lt;li&gt;Because there is no single source of truth for the strategy, it is harder to hold the leader accountable.&lt;/li&gt;
&lt;li&gt;The leader needs to join every single conversation. The lack of clarity becomes a massive blocker. Two things can happen: either the leader burns out or the team grinds to a halt. In any case, the leader will not be able to focus on the things only they can do.&lt;/li&gt;
&lt;li&gt;Decisions based on an unclear or inexistent strategy will be inconsistent and push teams in different directions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have been &lt;a href=&#34;https://saltares.com/5-mistakes-i-have-made-as-an-engineering-leader/&#34;&gt;guilty&lt;/a&gt; of this in the past. Unfortunately, it seems to be more common than you’d think for companies not to have clear and easily reference-able technology strategies.&lt;/p&gt;
&lt;p&gt;Imagine a team that needs to add rich text editing to their web application. An engineer goes ahead and researches what the potential alternatives are. Their work output should be a walkthrough of their findings plus a recommendation. The team will review async and then get together to reach a final decision. The research becomes significantly more chaotic and stressful without a solid technology strategy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What should the criteria even be?&lt;/li&gt;
&lt;li&gt;Are we okay with paying for a solution? Where do we stand on build vs buy?&lt;/li&gt;
&lt;li&gt;Do we care more about customisation or speed of integration?&lt;/li&gt;
&lt;li&gt;Do we prioritise stability over feature-set?&lt;/li&gt;
&lt;li&gt;How do we feel about depending on new open-source software? Will we become maintainers?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How can they possibly make a sane recommendation that is consistent with the direction the team is moving in?&lt;/p&gt;
&lt;p&gt;In contrast, what does it feel like when you set a clear and public technology strategy?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All of a sudden, you have more time on your calendar. No need to be pulled into every technical conversation. You are scaling yourself as a leader!&lt;/li&gt;
&lt;li&gt;Individuals in your team are empowered to make decisions. As a result, &lt;a href=&#34;https://themanagershandbook.com/working-as-a-team/decision-making#getting-buy-in&#34;&gt;the level of buy-in increases dramatically&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Engagement goes up because individuals encounter many more growth opportunities. Bad attrition goes down!&lt;/li&gt;
&lt;li&gt;In organisations with multiple teams, everyone starts rowing in the same direction. Impact of initiatives compounds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A team that feels like the above sounds like a pretty good place to be in, doesn’t it? Of course, a solid technology strategy is not a sufficient condition to create such an environment. You need a culture of inclusion, trust and a few other ingredients. The plan is not enough, but it certainly is necessary.&lt;/p&gt;
&lt;p&gt;Perhaps in the future, I may write about how to construct a solid technology strategy and communicate it with the rest of the organisation.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>10x developers really exist</title>
      <link>https://saltares.com/10x-developers-really-exist/</link>
      <pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/10x-developers-really-exist/</guid>
      <description>Since the original 1968 article, &amp;ldquo;*Exploratory experimental studies comparing online and offline programming performance&amp;rdquo;*, there has been a lot of debate around the figure of the 10x developer. We’re talking about engineers who are an order of magnitude &amp;ldquo;better&amp;rdquo; than their peers by whatever measure.
These engineers exist, but not in the way most people describe them.
Typically, the stories describe them as those who:
Can close 10 times more Jira issues.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/hacker-typer.gif&#34; alt=&#34;Screencast of hacker typer&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Since the original 1968 article, &amp;ldquo;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/362851.362858&#34;&gt;*Exploratory experimental studies comparing online and offline programming performance&lt;/a&gt;&amp;rdquo;*, there has been a lot of debate around the figure of the 10x developer. We’re talking about engineers who are an order of magnitude &lt;em&gt;&amp;ldquo;better&amp;rdquo;&lt;/em&gt; than their peers by whatever measure.&lt;/p&gt;
&lt;p&gt;These engineers exist, but not in the way most people describe them.&lt;/p&gt;
&lt;p&gt;Typically, the stories describe them as those who:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can close 10 times more Jira issues.&lt;/li&gt;
&lt;li&gt;Complete 10 times more story points.&lt;/li&gt;
&lt;li&gt;Write 10 times more lines of code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately, there are a few shortcomings. These two posts describe them eloquently, give them a read.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;quot;&lt;a href=&#34;https://www.simplethread.com/the-10x-programmer-myth/&#34;&gt;The 10x programmer myth&lt;/a&gt;&amp;quot;&lt;/em&gt; by Justin Etheredge.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;em&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/we-fired-our-top-talent-best-decision-we-ever-made-4c0a99728fde/&#34;&gt;We fired our top talent. Best decision we ever made&lt;/a&gt;&amp;rdquo;&lt;/em&gt; by Jonathan Solórzano-Hamilton.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can summarise these damaging traits as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They work in isolation and lack self-awareness. They are never wrong.&lt;/li&gt;
&lt;li&gt;They become the only person who knows about an increasingly large number of systems. That decreases the &lt;a href=&#34;https://en.wikipedia.org/wiki/Bus_factor&#34;&gt;bus factor&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;All of a sudden, every technical decision and question goes through them and they become a dangerous bottleneck.&lt;/li&gt;
&lt;li&gt;They are good technically, but they don’t coach nor mentor and so the team misses on great growth opportunities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=JZ017D_JOPY&#34;&gt;Linus Torvalds’ &amp;ldquo;abrasive&amp;rdquo; behavior&lt;/a&gt; comes to mind. Cassidy also characterises the 10x developer quite effectively.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Life as a 10x engineer &lt;a href=&#34;https://t.co/bdsHTw0QEv&#34;&gt;pic.twitter.com/bdsHTw0QEv&lt;/a&gt;&lt;/p&gt;&amp;mdash; Cassidy (@cassidoo) &lt;a href=&#34;https://twitter.com/cassidoo/status/1150170262228201472?ref_src=twsrc%5Etfw&#34;&gt;July 13, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;It doesn’t sound like a massive win for a development team to have such an individual in their ranks. So&amp;hellip; how come I think the 10x developer actually exists?&lt;/p&gt;
&lt;p&gt;Developers who scale themselves by making everyone in the team better often become 10x developers. Their traits and behaviors are quite different from those traditionally attributed to the classical 10x developer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Excellent communication skills, both written and verbal.&lt;/li&gt;
&lt;li&gt;They build trust through transparency and vulnerability.&lt;/li&gt;
&lt;li&gt;A regular part of their job is to coach other team members through coffee chats, workshops, or 1-1s.&lt;/li&gt;
&lt;li&gt;They facilitate participation from everyone and truly listen to their ideas, making them feel safe and valued.&lt;/li&gt;
&lt;li&gt;They have strong opinions, loosely held.&lt;/li&gt;
&lt;li&gt;They constantly look for new things to learn.&lt;/li&gt;
&lt;li&gt;They regularly sponsor initiatives to iteratively improve the team and encourage others to do the same.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Building software products is a deeply collaborative activity. Team performance grows exponentially when your developers have a strong technical foundation, are excellent collaborators, and trust each other. No lone wolf wonder-genius can scale themselves to that level by hacking away in a cave. It’s just impossible.&lt;/p&gt;
&lt;p&gt;Engineering leaders play a key role in fostering a culture where these traits are celebrated and become part of the core expectations of all developers in the team. It is essential the incentive system is aligned with the kind of team you want to build. When lone wolves who routinely work evenings and weekends are the ones getting pay raises and promotions, you will get a burnt-out team who don’t trust each other. When you make a habit of giving shout-outs and promotions to folks who helped the collective improve, you will reap the benefits tenfold.&lt;/p&gt;
&lt;p&gt;10x developers really exist, they make everyone else in the team better.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Behind the scenes of Plot’s Learning Design Platform</title>
      <link>https://saltares.com/behind-the-scenes-of-plots-learning-design-platform/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/behind-the-scenes-of-plots-learning-design-platform/</guid>
      <description>At Plot, we’re building a Learning Design Platform that enables companies to rapidly scale the design of high-quality learning experiences by helping learning designers to make better design decisions faster.
It took our small team about three months to create a prototype of the platform. As with all early-stage startups, we did this in an environment of high uncertainty, making some technology choices a bit tricky. That’s where our guiding principles come in - our principles are what enable us to make the best decisions for our customers and our business even when faced with great uncertainty.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/plot/plot-logo.png&#34; alt=&#34;Plot logo&#34;&gt;

&lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;https://www.plot.co/&#34;&gt;Plot&lt;/a&gt;, we’re building a Learning Design Platform that enables companies to rapidly scale the design of high-quality learning experiences by helping learning designers to make better design decisions faster.&lt;/p&gt;
&lt;p&gt;It took our small team about three months to create a prototype of the platform. As with all early-stage startups, we did this in an environment of high uncertainty, making some technology choices a bit tricky. That’s where our guiding principles come in - our principles are what enable us to make the best decisions for our customers and our business even when faced with great uncertainty.&lt;/p&gt;
&lt;h3 id=&#34;-our-principles&#34;&gt;🙌 Our Principles&lt;/h3&gt;
&lt;p&gt;Right at the beginning, we set the following principles to help everyone on the team make technology decisions that supported our goals and ensured we were progressing in the same direction.
We agreed that we would:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spend close to 100% of our time building the actual product&lt;/li&gt;
&lt;li&gt;Create short feedback loops  to ensure quality and velocity&lt;/li&gt;
&lt;li&gt;Push complexity as much into the future as possible&lt;/li&gt;
&lt;li&gt;Fall into the &lt;a href=&#34;https://blog.codinghorror.com/falling-into-the-pit-of-success/&#34;&gt;Pit of Success&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Prioritize User Experience (UX) and Developer Experience (DX)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-the-stack&#34;&gt;⚙️ The Stack&lt;/h2&gt;
&lt;p&gt;Let’s dive into the stack that laid the foundations of our technology platform.&lt;/p&gt;
&lt;h3 id=&#34;-typescript&#34;&gt;⌨️ Typescript&lt;/h3&gt;
&lt;p&gt;We write all our code in &lt;a href=&#34;https://www.typescriptlang.org/&#34;&gt;Typescript&lt;/a&gt;, with no Javascript allowed. We made this choice for a few reasons. They were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The team was already familiar with both languages, so there was no steep learning curve.&lt;/li&gt;
&lt;li&gt;The DX the tooling gave us was world-class.&lt;/li&gt;
&lt;li&gt;We caught a lot of silly type-related bugs early which saved time.&lt;/li&gt;
&lt;li&gt;Using the same language across the stack simplified the toolchain.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, the Javascript/Node.js/Typescript ecosystem is &lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#technology-most-popular-technologies&#34;&gt;incredibly popular&lt;/a&gt; and Typescript is one of the &lt;a href=&#34;https://insights.stackoverflow.com/survey/2021#technology-most-loved-dreaded-and-wanted&#34;&gt;most loved technologies&lt;/a&gt;, according to the Stack Overflow Developer survey 2021. So, finding answers to problems was a breeze!&lt;/p&gt;
&lt;h3 id=&#34;-infrastructure-as-code&#34;&gt;🏗️ Infrastructure as Code&lt;/h3&gt;
&lt;p&gt;We use &lt;a href=&#34;https://www.terraform.io/&#34;&gt;Terraform&lt;/a&gt; to declare our infrastructure components. That way, our environments are easily reproducible; we can spin them up in a matter of minutes. Additionally, all infrastructure changes go through the same peer-review and CI/CD pipeline as the rest of the system.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/terraform-plan.png&#34; alt=&#34;Terraform plan&#34;&gt;

&lt;/p&gt;
&lt;h3 id=&#34;-nextjs---the-full-stack-framework&#34;&gt;🚀 Next.js - The Full-stack Framework&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; is &lt;em&gt;the&lt;/em&gt; full-stack framework for React applications. Having an opinionated framework that takes care of routing and API endpoints, which fits very well with Typescript and does server-side rendering, and has great DX allows us to focus on actually building the application. Not having to worry about configuring Webpack is liberating.&lt;/p&gt;
&lt;p&gt;The entire team had plenty of experience with React, so adopting Next.js was a straightforward step.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://remix.run/&#34;&gt;Remix&lt;/a&gt; became generally available shortly after we started and it seems spectacular. However, we’re pretty happy with Next.js still. Next.js is battle-tested, mature, and has a very active community.&lt;/p&gt;
&lt;h3 id=&#34;-storage&#34;&gt;🚛 Storage&lt;/h3&gt;
&lt;p&gt;For our persistent data layer, we chose &lt;a href=&#34;https://www.prisma.io/&#34;&gt;Prisma&lt;/a&gt; with &lt;a href=&#34;https://www.postgresql.org/&#34;&gt;PostgreSQL&lt;/a&gt;. Prisma is an outstanding tool that helped us move much faster. We enjoyed the hassle-free migrations, but we were blown away by the type safety and the autocomplete for writing queries.&lt;/p&gt;
&lt;p&gt;We knew our data was going to be mostly relational. That is why we chose PostgreSQL over &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDb&lt;/a&gt;. Thanks to its JSON support, PostgreSQL is versatile and it would adapt well to document-like records if ever needed. PostgreSQL is 99.9% likely to meet our needs!&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt;, we ran a persistent database for local development and a non-persistent one for integration tests using Docker Compose.&lt;/p&gt;
&lt;h3 id=&#34;-other-app-side-technologies&#34;&gt;🌍 Other App-side Technologies&lt;/h3&gt;
&lt;p&gt;We implemented our own design system using &lt;a href=&#34;https://tailwindcss.com/&#34;&gt;TailwindCSS&lt;/a&gt; and &lt;a href=&#34;https://headlessui.dev/&#34;&gt;HeadlessUI&lt;/a&gt;. TailwindCSS gave us best-in-class DX with complete freedom to make our application look neat and consistent without being too similar to &lt;a href=&#34;https://v4.mui.com/&#34;&gt;Material-UI&lt;/a&gt;. Once we became proficient with it, translating wireframes to components and screens came naturally. HeadlessUI was a “Pit of Success” for our app to be accessible.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/plot-stories.png&#34; alt=&#34;Plot storybook&#34;&gt;

&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://react-query.tanstack.com/&#34;&gt;React Query&lt;/a&gt; helps us manage our server-side state on the client. We get cache invalidation, retries, online/offline management, request cancellation, pagination, and more with no effort at all.&lt;/p&gt;
&lt;p&gt;Plot users need to be able to collect documentation in a rich and structured way. So, we needed to provide a rich text editor, but creating a great text editing experience on the web that works well across devices is a brutal challenge. I speak &lt;a href=&#34;https://portal.aula.education/c/59-better-faster-more-accessible-aula-editor&#34;&gt;from experience&lt;/a&gt;! That is precisely why we chose &lt;a href=&#34;https://remirror.io/&#34;&gt;remirror&lt;/a&gt;, an open-source, off-the-shelf editor for React based on &lt;a href=&#34;https://prosemirror.net/&#34;&gt;Prosemirror&lt;/a&gt;. With remirror, the team had the whole, bug-free, rich text editing experience working in our app in under a week.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/remirror-editor.png&#34; alt=&#34;Plot editor&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Authentication is probably one of the most critical parts of any application. It is one of the first flows users experience and a typical attack vector. We could have chosen an authentication-as-a-service provider, like &lt;a href=&#34;https://auth0.com/&#34;&gt;Auth0&lt;/a&gt;, but we decided to go with &lt;a href=&#34;https://next-auth.js.org/&#34;&gt;NextAuth.js&lt;/a&gt;. It was tremendously simple to set up and lets us heavily customize the experience. Plus, we’re able to keep all of the data.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/plot-auth.png&#34; alt=&#34;Plot login screen&#34;&gt;

&lt;/p&gt;
&lt;h3 id=&#34;-cloud-hosting&#34;&gt;☁️ Cloud Hosting&lt;/h3&gt;
&lt;p&gt;The core of the Plot LXD platform lives inside the Next.js application, which we deploy to &lt;a href=&#34;https://vercel.com/&#34;&gt;Vercel&lt;/a&gt;. The automated preview and production deployments with zero configuration have been an incredible productivity boost; much better than setting up the infrastructure ourselves.&lt;/p&gt;
&lt;p&gt;We use AWS (managed by Terraform) for the infrastructure pieces we need and which are not provided by Vercel: VPCs, RDS, SES, S3, etc.&lt;/p&gt;
&lt;h3 id=&#34;-user-analytics&#34;&gt;📈 User Analytics&lt;/h3&gt;
&lt;p&gt;We knew we did not have the capacity to build and maintain a proprietary data pipeline. So, we chose &lt;a href=&#34;https://amplitude.com/&#34;&gt;Amplitude&lt;/a&gt; as our data analytics platform for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generous “free” tier&lt;/li&gt;
&lt;li&gt;Easy to integrate with a Next.js app&lt;/li&gt;
&lt;li&gt;Ease of use (it allows anyone in the company to obtain insights from available data)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-cicd&#34;&gt;🚢 CI/CD&lt;/h3&gt;
&lt;p&gt;All our code lives in a monorepo (via &lt;a href=&#34;https://classic.yarnpkg.com/lang/en/docs/workspaces/&#34;&gt;yarn workspaces&lt;/a&gt;) hosted in Github. We also leverage Github issues and actions CI/CD for a more straightforward setup.&lt;/p&gt;
&lt;p&gt;A workflow kicks off when a PR is open that runs linting, unit/integration tests, and a preview deployment. Everything happens in parallel and takes less than 3 minutes.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/app-preview.png&#34; alt=&#34;Plot deploy workflow&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Another workflow starts when a PR is merged to main. It deploys the application to production after all other checks have passed. Every change goes &lt;a href=&#34;https://charity.wtf/2021/02/19/how-much-is-your-fear-costing-you/&#34;&gt;from main to production in under 5 minutes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our continuous delivery culture of fast &amp;amp; frequent deployments coupled with feature flags via &lt;a href=&#34;https://launchdarkly.com/&#34;&gt;LaunchDarkly&lt;/a&gt; has enabled us to excel at software delivery. We have been releasing over 6 times/day with a failure rate of &amp;lt;1%.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/plot/delivery-metrics.png&#34; alt=&#34;Plot delivery metrics&#34;&gt;

&lt;/p&gt;
&lt;h3 id=&#34;-observability&#34;&gt;🚨 Observability&lt;/h3&gt;
&lt;p&gt;Software systems are bound to fail. We use the following tools to observe our application in production so we can understand how it behaves and where the problems are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://logflare.app/&#34;&gt;Logflare&lt;/a&gt; for log aggregation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sentry.io/&#34;&gt;Sentry&lt;/a&gt; for error tracking and performance monitoring&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://honeycomb.io/&#34;&gt;Honeycomb&lt;/a&gt; for application tracing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-thanks-for-reading&#34;&gt;🙌 Thanks for reading&lt;/h2&gt;
&lt;p&gt;I hope our stack inspires you to build great things in 2022 and that this post has provided some helpful guidance for developing a high-quality web application from the ground up!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>5 Mistakes I have made as an engineering leader</title>
      <link>https://saltares.com/5-mistakes-i-have-made-as-an-engineering-leader/</link>
      <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/5-mistakes-i-have-made-as-an-engineering-leader/</guid>
      <description>By Sarah Kilian on Unsplash To err is human, and I certainly have made my share of mistakes in my career as an engineering leader. Undoubtedly, I still have quite a few yet to make. Like with software incidents, it is vital to reflect and learn from mistakes, so that our system becomes more robust and we grow as professionals.
Today, I thought it would be interesting to go through 6 mistakes I have made as an engineering leader.</description>
      <content>&lt;p&gt;
  &lt;figure&gt;
    &lt;img class=&#34;figure-image&#34; src=&#34;./img/ruined_ice_cream.jpg&#34; alt=&#34;Dropped ice cream cone&#34;&gt;
    &lt;figcaption&gt;By Sarah Kilian on &lt;a href=&#34;https://unsplash.com/photos/52jRtc2S_VE&#34;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;To err is human, and I certainly have made my share of mistakes in my career as an engineering leader. Undoubtedly, I still have quite a few yet to make. Like with software incidents, it is vital to &lt;a href=&#34;./a-template-for-great-incident-reviews&#34;&gt;reflect and learn from mistakes&lt;/a&gt;, so that our system becomes more robust and we grow as professionals.&lt;/p&gt;
&lt;p&gt;Today, I thought it would be interesting to go through 6 mistakes I have made as an engineering leader.&lt;/p&gt;
&lt;h3 id=&#34;1-skipping-1-1s&#34;&gt;1. Skipping 1-1s&lt;/h3&gt;
&lt;p&gt;Skipping 1-1s was never really a habit for me. I’ve always made it a priority to be available for my team. However, I’ve had reports who didn’t take enough ownership over their 1-1s. When that time of the week came, I would sometimes get a chat message:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey, I don’t have anything for 1-1 today. Shall we skip it?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We were super busy, so agreeing was highly tempting. In doing so, I was missing out on the opportunity to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share my expectations and feedback around 1-1 ownership.&lt;/li&gt;
&lt;li&gt;Empower and motivate the individual.&lt;/li&gt;
&lt;li&gt;Set goals and maintain accountability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Later, I learned to ask &lt;a href=&#34;https://lauratacho.com/blog/how-can-i-make-my-1-1s-less-boring&#34;&gt;better questions&lt;/a&gt;, put the individuals in the driver&amp;rsquo;s seat, and make the most of 1-1s.&lt;/p&gt;
&lt;h3 id=&#34;2-underestimating-having-a-clear-technology-strategy&#34;&gt;2. Underestimating having a clear technology strategy&lt;/h3&gt;
&lt;p&gt;Many managers dictate and involve themselves in every technical decision their teams make. I want to empower my teams to make their own decisions and genuinely have agency over the software they build, ship and maintain. However, for multiple squads to do that consistently, you need a couple of things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Excellent communication across teams/squads.&lt;/li&gt;
&lt;li&gt;A clear technology vision and strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It took me too long to support my teams by sharing a clear technology vision and strategy that would become the principles on which they could base technical decisions. Once I did that, it felt like magic. We were all rowing our technology in the same direction.&lt;/p&gt;
&lt;p&gt;It doesn’t need to be too comprehensive. Just be clear about the kinds of tradeoffs you want the team to make. I will dive deeper into this one at some point with a separate article.&lt;/p&gt;
&lt;h3 id=&#34;3-not-setting-clear-expectations&#34;&gt;3. Not setting clear expectations&lt;/h3&gt;
&lt;p&gt;There have been instances where an individual was surprised when receiving feedback from me. That is usually a robust signal that expectations were not clear enough. As long as expectations are clear, folks have enough self-awareness to reflect and identify a problem after receiving feedback about something not working out great.&lt;/p&gt;
&lt;p&gt;Making the expectations of each role in your organization public is a fantastic tool.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Help everyone understand what is expected of them.&lt;/li&gt;
&lt;li&gt;Increase equity, people in the same role are not evaluated against different standards.&lt;/li&gt;
&lt;li&gt;Greater understading of what it takes to progress.&lt;/li&gt;
&lt;li&gt;When shared externally, it can be a great recruiting tool.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, you should complement this with &lt;a href=&#34;https://themanagershandbook.com/coaching-and-feedback/running-one-on-ones&#34;&gt;great 1-1 sessions&lt;/a&gt;, good cross-team understanding of roles and responsibilities, etc.&lt;/p&gt;
&lt;h3 id=&#34;4-not-hiring-engineering-managers-first&#34;&gt;4. Not hiring Engineering Managers first&lt;/h3&gt;
&lt;p&gt;Back in January 2021, I found myself in the position to increase capacity fast. To do that, I had to &lt;a href=&#34;./how-to-hire-8-engineers-in-8-weeks&#34;&gt;grow the Aula engineering team from 7 to 25 in record time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yikes!&lt;/p&gt;
&lt;p&gt;I knew hiring Engineers was hard, but finding fantastic Engineering Managers (EMs) is much worse. In Europe, managers also tend to have longer notice periods, up to 3 months!. The pressure to increase capacity was so high that I mistakenly prioritized individual contributor (IC) roles over the manager ones.&lt;/p&gt;
&lt;p&gt;As a consequence, my team grew well beyond my management capacity. If I remember correctly, I had 15 reports at one point. I still had to do all these Engineering Manager interviews, so the quality of my feedback went down, and it became increasingly hard to help the team push in the same direction.&lt;/p&gt;
&lt;p&gt;What would have happened if I had focused on increasing managerial capacity first? Maybe short-term velocity would not have gone up, but I would have achieved a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Much higher hiring capacity with lower pressure on ICs.&lt;/li&gt;
&lt;li&gt;Significant improvements to feedback.&lt;/li&gt;
&lt;li&gt;Greater alignment across product squads.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-not-investing-enough-in-team-building&#34;&gt;5. Not investing enough in team building&lt;/h3&gt;
&lt;p&gt;In a rapidly growing organization, folks start working closely with other people they do not know at all. Even though everyone works hard, software delivery does not progress as expected.&lt;/p&gt;
&lt;p&gt;There is no trust.&lt;/p&gt;
&lt;p&gt;Not because you hired the wrong people, but simply because you have made no room for individuals to build trust with each other. Thanks to the feedback I received, we invested much more in getting to know each other and building that trust. The team gelled and worked much more effectively together after that.&lt;/p&gt;
&lt;p&gt;🙌 Thanks for reading. Hopefully, some of these have provided you with some insight.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>A playbook for calm incident response</title>
      <link>https://saltares.com/a-playbook-for-calm-incident-response/</link>
      <pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/a-playbook-for-calm-incident-response/</guid>
      <description>By Camilo Jimenez on Unsplash Incident response can be stressful. The system is on fire, the team has to fix it ASAP, and you&amp;rsquo;re working against the clock. Your users are getting frustrated, the company loses money, stakeholders constantly check for updates, and trust is at risk. What a nightmare!
The tension is so high that the incident responder forgets to communicate effectively or is so worried about keeping folks up to date that they take the wrong action, further compromising the system.</description>
      <content>&lt;p&gt;
  &lt;figure&gt;
    &lt;img class=&#34;figure-image&#34; src=&#34;./img/ambulance-emergency.jpg&#34; alt=&#34;NASA mision control room&#34;&gt;
    &lt;figcaption&gt;By Camilo Jimenez on &lt;a href=&#34;https://unsplash.com/photos/vGu08RYjO-s&#34;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;Incident response can be stressful. The system is on fire, the team has to fix it ASAP, and you&amp;rsquo;re working against the clock. Your users are getting frustrated, the company loses money, stakeholders constantly check for updates, and trust is at risk. What a nightmare!&lt;/p&gt;
&lt;p&gt;The tension is so high that the incident responder forgets to communicate effectively or is so worried about keeping folks up to date that they take the wrong action, further compromising the system.&lt;/p&gt;
&lt;p&gt;Your team may greatly benefit from an incident playbook at times like this. When a new incident kicks off, the responder creates a new document from a template. This document serves as a guide on how to respond to the incident. It removes a lot of stress from the situation and helps the team resolve the problem faster.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;https://plot.co&#34;&gt;Plot&lt;/a&gt;, we have a Notion template for our incidents that looks something like this.&lt;/p&gt;
&lt;h3 id=&#34;checklist&#34;&gt;✅ Checklist&lt;/h3&gt;
&lt;p&gt;The responder ticks off actions as they go through them.&lt;/p&gt;
&lt;span class=&#34;begin-task-list&#34;&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Assign yourself and acknowledge the alert or the issue.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Start populating the log below.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start communications:&lt;/p&gt;
&lt;span class=&#34;begin-task-list&#34;&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Post a message in the &lt;code&gt;#downtime&lt;/code&gt; Slack channel about the active outage.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Start a call to better coordinate and send the link to the &lt;code&gt;#engineering&lt;/code&gt; Slack channel.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update status page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Work on the issue:&lt;/p&gt;
&lt;span class=&#34;begin-task-list&#34;&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; If you need help from a team member with domain expertise, page them.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; First, stabilize the system.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Then, resolve the issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the issue is resolved:&lt;/p&gt;
&lt;span class=&#34;begin-task-list&#34;&gt;&lt;/span&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update status page.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update the &lt;code&gt;#downtime&lt;/code&gt; channel.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write an incident review doc and share it in &lt;code&gt;#downtime&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Schedule an incident review call with the engineering team.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-log&#34;&gt;✍️ Log&lt;/h3&gt;
&lt;p&gt;Populating the following log during the incident helps the responder put together an &lt;a href=&#34;./a-template-for-great-incident-reviews&#34;&gt;incident review document&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Finding or action taken&lt;/th&gt;
&lt;th&gt;Details&lt;/th&gt;
&lt;th&gt;Timestamp&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Alert triggered&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;March 11, 2022 10:17&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;-additional-tips-for-the-incident-responder&#34;&gt;🚀 Additional tips for the incident responder&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;🤝 You are not alone in this. Ask for help if you need it and delegate.&lt;/li&gt;
&lt;li&gt;🗣 High severity incidents: consider making some other team member the owner of communications so that you can focus on the other steps.&lt;/li&gt;
&lt;li&gt;🔐 Security incidents: choose appropriate wording for public communications to avoid the vulnerability from being exploited further.&lt;/li&gt;
&lt;li&gt;⚠️ If you stop being available during an incident, put a continuity plan is in place.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, you can adapt this template to your needs. The main idea is that having a checklist in the first place avoids stress when responding to a problem.&lt;/p&gt;
&lt;p&gt;🙌 Thanks for reading! I would love to hear from you if you have any thoughts around checklists for incident response.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>A template for great incident reviews</title>
      <link>https://saltares.com/a-template-for-great-incident-reviews/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/a-template-for-great-incident-reviews/</guid>
      <description>By Sieuwert Otterloo on Unsplash Software incidents suck big time. Suddenly, you have more work to do; the sprint is derailed; stakeholders raise their eyebrows and start asking questions. Nobody wants that! Unfortunately, incidents do happen. Complex software systems are bound to fail from time to time.
An incident can also be an opportunity. Your job is to make sure to seize it. Incident review docs followed by a discussion help a lot.</description>
      <content>&lt;p&gt;
  &lt;figure&gt;
    &lt;img class=&#34;figure-image&#34; src=&#34;./img/mission-control.jpeg&#34; alt=&#34;NASA mision control room&#34;&gt;
    &lt;figcaption&gt;By Sieuwert Otterloo on &lt;a href=&#34;https://unsplash.com/photos/6SyrBaRjLJ4&#34;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;/p&gt;
&lt;p&gt;Software incidents suck big time. Suddenly, you have more work to do; the sprint is derailed; stakeholders raise their eyebrows and start asking questions. Nobody wants that! Unfortunately, incidents do happen. Complex software systems are bound to fail from time to time.&lt;/p&gt;
&lt;p&gt;An incident can also be an opportunity. Your job is to make sure to seize it. &lt;strong&gt;Incident review docs&lt;/strong&gt; followed by a discussion help a lot. Above all else, the main goal of incident reviews is to &lt;strong&gt;learn&lt;/strong&gt;, although great incident reviews can achieve much more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify ways to make the system more robust.&lt;/li&gt;
&lt;li&gt;Identify and close process gaps.&lt;/li&gt;
&lt;li&gt;Learn about the system they maintain and develop.&lt;/li&gt;
&lt;li&gt;Protect the trust with the rest of the company and customers by being transparent.&lt;/li&gt;
&lt;li&gt;Understand user impact better and develop user empathy.&lt;/li&gt;
&lt;li&gt;Help future team members understand the systems&amp;rsquo; weak points and how incidents are handled.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recommend the following approach, which &lt;a href=&#34;./6-tips-to-make-remote-meetings-more-inclusive/&#34;&gt;makes the process more inclusive&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The incident leader/responder writes the review doc.&lt;/li&gt;
&lt;li&gt;The team reads and comments async.&lt;/li&gt;
&lt;li&gt;Everyone gets together to reflect and align on actions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here&amp;rsquo;s an incident review doc template that has worked well in my teams.&lt;/p&gt;
&lt;h3 id=&#34;-authors&#34;&gt;✍️ Authors&lt;/h3&gt;
&lt;p&gt;List the people who put the incident review document together. It will help future readers know who to ask for more information.&lt;/p&gt;
&lt;h3 id=&#34;-summary&#34;&gt;🗞️ Summary&lt;/h3&gt;
&lt;p&gt;Write out the TLDR version of what happened.&lt;/p&gt;
&lt;h3 id=&#34;-impact&#34;&gt;🔥 Impact&lt;/h3&gt;
&lt;p&gt;When talking about impact, you should consider several dimensions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🚶‍♂️ &lt;strong&gt;User&lt;/strong&gt;: were users unable to carry out a particular action? Was their data lost? Was their data compromised? How did that affect their lives or jobs?&lt;/li&gt;
&lt;li&gt;👩‍💼 &lt;strong&gt;Business&lt;/strong&gt;: a helpful way to think about this one is to try to answer the question, how much money did the company lose with this incident?&lt;/li&gt;
&lt;li&gt;⚽ &lt;strong&gt;Team&lt;/strong&gt;: did someone wake up in the middle of the night to respond? Did people work late? Was the sprint interrupted because many team members had to work on remediation?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-detection&#34;&gt;🚨 Detection&lt;/h3&gt;
&lt;p&gt;How did the team become aware of the issue? At best, an alert told you something was wrong even before users became aware. At worst, a user had to submit a ticket to Product Support.&lt;/p&gt;
&lt;h3 id=&#34;-triage&#34;&gt;🔍 Triage&lt;/h3&gt;
&lt;p&gt;What were the actions taken by the responder to assess the severity of the issue and escalate?&lt;/p&gt;
&lt;h3 id=&#34;-root-causes&#34;&gt;🐛 Root causes&lt;/h3&gt;
&lt;p&gt;Share the team&amp;rsquo;s steps to investigate the issue and identify the root cause. Include information gathered from observability tools like screenshots or links to dashboards. Do not spare details here. Everyone can learn a lot about how the system works from this section.&lt;/p&gt;
&lt;p&gt;I am a firm believer in &lt;a href=&#34;https://sre.google/sre-book/postmortem-culture/&#34;&gt;blameless postmortems&lt;/a&gt;, although I am conscious of how easy it is to avoid attribution. Focus on the circumstances that triggered the incident instead of the individuals. But be careful not to skip the root cause entirely.&lt;/p&gt;
&lt;h3 id=&#34;-resolution&#34;&gt;🧯 Resolution&lt;/h3&gt;
&lt;p&gt;What actions did the team take to bring the system back to normal? How did you make sure everything was, indeed, okay?&lt;/p&gt;
&lt;p&gt;Again, don&amp;rsquo;t forget the charts!&lt;/p&gt;
&lt;h3 id=&#34;-timeline&#34;&gt;⏱️ Timeline&lt;/h3&gt;
&lt;p&gt;Share the complete list of events. Compiling the actual timeline is much easier when the incident leader takes notes during the incident.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Timestamp.&lt;/li&gt;
&lt;li&gt;Action or discovery.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-lessons-learned&#34;&gt;👩‍🎓 Lessons learned&lt;/h3&gt;
&lt;p&gt;Knowing what happened, it&amp;rsquo;s time to reflect. I like to focus on three categories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;👍 What went well&lt;/li&gt;
&lt;li&gt;👎 What went wrong&lt;/li&gt;
&lt;li&gt;🤞 Where we got lucky&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Think about it in terms of software and processes and avoid attributing individual blame.&lt;/p&gt;
&lt;h3 id=&#34;-actions-and-issues&#34;&gt;⏭️ Actions and issues&lt;/h3&gt;
&lt;p&gt;List of remediation and preemptive actions. Ideally, all of them have a corresponding ticket. Focus on process improvements and technical work to address what went wrong and avoid depending on luck. As an engineering leader, it&amp;rsquo;s your job to work with Product Management and prioritize those tickets.&lt;/p&gt;
&lt;h3 id=&#34;-share-it&#34;&gt;👐 Share it&lt;/h3&gt;
&lt;p&gt;Always share the document with the entire organization. In some cases, consider sharing an adapted version with customers. It may feel scary and shameful. However, being open about mistakes and your actions to improve is a great way to protect the trust you worked so hard to build.&lt;/p&gt;
&lt;p&gt;🙌 Thanks for reading. Hopefully, this template can help you make the most of the situation when your system blows up. I would love to hear from you if you&amp;rsquo;re approaching things differently.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Help Engineers understand the Why</title>
      <link>https://saltares.com/help-engineers-understand-the-why/</link>
      <pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/help-engineers-understand-the-why/</guid>
      <description>Every engineer in the team must understand the why.
Can everyone confidently answer the question:
What problem are we trying to solve with this user story?
Understanding the why is essential to the success of a project and the team&amp;rsquo;s performance. A group of people who don&amp;rsquo;t understand users or their problems cannot build a high-quality product.
Sure, you have well-specified epics and user stories. Still, during delivery, the team will have to make dozens of decisions that are not detailed in the ticket.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/understand-the-why.webp&#34; alt=&#34;team building a wooden house&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Every engineer in the team must understand the &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Can everyone confidently answer the question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What problem are we trying to solve with this user story?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Understanding the &lt;em&gt;why&lt;/em&gt; is essential to the success of a project and the team&amp;rsquo;s performance. A group of people who don&amp;rsquo;t understand users or their problems cannot build a high-quality product.&lt;/p&gt;
&lt;p&gt;Sure, you have well-specified epics and user stories. Still, during delivery, the team will have to make dozens of decisions that are not detailed in the ticket. There are two options. Either delivery grinds to a halt, with engineers constantly asking the Designer/PM. Or they make the decisions themselves. To make the right decisions, everyone needs to understand users, the problem, and the solution.&lt;/p&gt;
&lt;p&gt;Everyone needs to understand the &lt;em&gt;why&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Many organizations struggle with this. Engineers focus on closing the next ticket in time for sprint review, and PMs are frustrated when features suffer delays because they were subpar.&lt;/p&gt;
&lt;p&gt;As an engineering leader, the bad news is that you are responsible for the situation. The good news is that you can turn the ship around.&lt;/p&gt;
&lt;h3 id=&#34;-dog-food-the-product&#34;&gt;🐶 Dog-food the product&lt;/h3&gt;
&lt;p&gt;What easier way to understand the product better than to use it every day?&lt;/p&gt;
&lt;p&gt;Well&amp;hellip; None.&lt;/p&gt;
&lt;p&gt;Admittedly, some organizations have it easier than others. Engineers at &lt;a href=&#34;https://honeycomb.io/&#34;&gt;Honeycomb&lt;/a&gt; use their own product to observe Honeycomb. If your product doesn&amp;rsquo;t lend itself naturally to be used by engineers, there are still things you can do.&lt;/p&gt;
&lt;p&gt;At &lt;a href=&#34;https://www.plot.co/&#34;&gt;Plot&lt;/a&gt;, we build a tool to help you create learning experiences like the world&amp;rsquo;s best learning designer. We&amp;rsquo;re running a challenge where we will all design a course using our tool. Not only will everyone familiarize themselves with the experience of using the product, but we will also collect loads of valuable feedback.&lt;/p&gt;
&lt;h3 id=&#34;-engineers-join-ux-interviews&#34;&gt;🧪 Engineers join UX interviews&lt;/h3&gt;
&lt;p&gt;Engineers who talk to users are bound to get to know them better. They can read written feedback, but there&amp;rsquo;s nothing like talking to them face to face.&lt;/p&gt;
&lt;p&gt;You can suggest they join your team&amp;rsquo;s Designer on the next series of user interviews that validate the solution they will work on next. Start with Engineers shadowing, so they become comfortable. Perhaps you&amp;rsquo;ll get a few individuals interested in conducting interviews themselves!&lt;/p&gt;
&lt;h3 id=&#34;-the-team-refines-together&#34;&gt;👌 The team refines together&lt;/h3&gt;
&lt;p&gt;Many teams do not refine user stories together. I am shocked at the number of instances when just the Engineering Manager, Product Manager, and Designer discuss the backlog. The Engineering Manager breaks down stories into tasks and assigns them to individuals in the team.&lt;/p&gt;
&lt;p&gt;I cannot state how extremely damaging that is.&lt;/p&gt;
&lt;p&gt;Firstly, Engineers only receive a piece of the puzzle, making it impossible to see the bigger picture. Secondly, they never get the chance to break stories into smaller chunks, missing out on developing a crucial skill.&lt;/p&gt;
&lt;p&gt;Refining together is a great way to share knowledge about the system, where the pitfalls and the opportunities are.&lt;/p&gt;
&lt;h3 id=&#34;-design-sprints--ideation-sessions&#34;&gt;👨‍🎨 Design sprints &amp;amp; ideation sessions&lt;/h3&gt;
&lt;p&gt;Having Engineers and other roles participate in design sprints or ideation sessions before a solution is presented to them is fantastic. Instead of thinking about the solution at hand, everyone is now thinking about the actual problem or frictions users face.&lt;/p&gt;
&lt;p&gt;There are a couple of bonuses. One is that Engineers feel more ownership over what they build. The other one is that Engineers might identify great solutions a Designer or PM thought to be technically infeasible. Yet another classic example of why diverse teams build better products.&lt;/p&gt;
&lt;h3 id=&#34;-everyone-does-support&#34;&gt;💬 Everyone does support!&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s typical of early-stage startups for everyone to help out with the help desk rotation. The Product Support team may not even exist yet! However, this normally stops the second the Support team assembles.&lt;/p&gt;
&lt;p&gt;A day where the Product Development team helps with Product Support will be a true eye-opener. There is nothing like seeing raw user frustration first-hand. It puts the roadmap into perspective.&lt;/p&gt;
&lt;h3 id=&#34;-make-product-part-of-the-jd-and-interview-process&#34;&gt;👩‍💻 Make Product part of the JD and interview process&lt;/h3&gt;
&lt;p&gt;If your interview process focuses exclusively on technical knowledge, you may attract Engineers who are not interested in understanding users.&lt;/p&gt;
&lt;p&gt;Think about the questions and conversations you may have to understand better how candidates think about user problems and solutions.&lt;/p&gt;
&lt;h3 id=&#34;-make-time-for-it&#34;&gt;⏳ Make time for it&lt;/h3&gt;
&lt;p&gt;Of course, you cannot just add new responsibilities to your team and expect nothing else to change. It&amp;rsquo;s an investment. The team may move slightly more slowly initially to increase quality and velocity later.&lt;/p&gt;
&lt;p&gt;🙌 Do you have other practices or techniques? Please do let me know!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>8 Questions to ask your potential future Engineering Manager during an interview</title>
      <link>https://saltares.com/8-questions-to-ask-your-potential-future-engineering-manager-during-an-interview/</link>
      <pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/8-questions-to-ask-your-potential-future-engineering-manager-during-an-interview/</guid>
      <description>We&amp;rsquo;re in the middle of a heated tech job market. The most heated tech job market in history!
I don&amp;rsquo;t know how long it will last. I know that it&amp;rsquo;s a great time to be an engineer right now. Yet, many people seem to forget a job interview goes both ways. Too many great developers make it through the interview process, asking superficial questions. Reality slaps them in the face when they start in their new role.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/interview-laptop.png&#34; alt=&#34;laptop with code on screen&#34;&gt;

&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re in the middle of a heated tech job market. &lt;a href=&#34;https://blog.pragmaticengineer.com/advice-for-tech-workers-to-navigate-a-heated-job-market/&#34;&gt;The most heated tech job market in history&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know how long it will last. I know that &lt;a href=&#34;https://www.forbes.com/sites/forbestechcouncil/2021/04/13/analyzing-the-software-engineer-shortage/?sh=8c36ed0321c6&#34;&gt;it&amp;rsquo;s a great time to be an engineer&lt;/a&gt; right now. Yet, many people seem to forget a job interview goes both ways. Too many great developers make it through the interview process, asking superficial questions. Reality slaps them in the face when they start in their new role.&lt;/p&gt;
&lt;p&gt;Awful team dynamics, managers excluding valuable team members, ego contests, lack of feedback, no proper coaching, etc. The list goes on.&lt;/p&gt;
&lt;p&gt;Has this ever happened to you? Read on!&lt;/p&gt;
&lt;p&gt;I recognize that not everyone can afford to be picky when looking for a job. It is a privilege. You may even fear coming across as fussy or difficult to work with. However, good interviewers should see real and profound questions as positive. You show that you have clear values and a vision for the kind of organization you want to be a part of. As an experienced interviewer, I promise that you will be better off.&lt;/p&gt;
&lt;p&gt;What questions should you be asking though?&lt;/p&gt;
&lt;p&gt;Of course, you may want to learn all about the technology stack and their agile practices. Get those questions out of the way ASAP. Ideally, the team should have those &lt;a href=&#34;https://dev.to/aulaeducation/aula-behind-the-scenes-of-the-learning-experience-platform-our-stack-1gno&#34;&gt;publicly documented somewhere&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go over eight questions you can ask your potential engineering manager. They will help you answer whether you want to work there.&lt;/p&gt;
&lt;h3 id=&#34;1--what-are-the-expectations-of-the-role-what-would-you-expect-from-me-in-30-days-and-in-3-months&#34;&gt;1. 🏆 What are the expectations of the role? What would you expect from me in 30 days? And in 3 months?&lt;/h3&gt;
&lt;p&gt;Some managers do not set clear expectations. Awful! Their reports are often surprised during performance reviews. If they can share an actual expectations doc, that would be perfect.&lt;/p&gt;
&lt;p&gt;Actual expectations shape culture. That is what the people you may work with will optimize for.&lt;/p&gt;
&lt;p&gt;Asking about different timeframes will help you understand the onboarding experience and timeframes.&lt;/p&gt;
&lt;h3 id=&#34;2--what-is-the-teams-biggest-challenge&#34;&gt;2. 🏔️ What is the team&amp;rsquo;s biggest challenge?&lt;/h3&gt;
&lt;p&gt;Does the answer feel like an exciting problem for you to solve? Or is it more like a glimpse into a world of chaos that makes you want to run away and never look back?&lt;/p&gt;
&lt;h3 id=&#34;3--how-are-technical-decisions-made&#34;&gt;3. 🤔 How are technical decisions made?&lt;/h3&gt;
&lt;p&gt;Are technical decisions exclusively made by a little boys club no one can join? I have been on the receiving end of that, and it is frustrating as hell. You want to look for a team where individuals of all levels make proposals.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Request_for_Comments&#34;&gt;RFC&lt;/a&gt;/&lt;a href=&#34;https://adr.github.io/&#34;&gt;ADR&lt;/a&gt; format works well. This is because &lt;a href=&#34;https://www.forbes.com/sites/laurelfarrer/2020/12/10/the-art-of-asynchronous-optimizing-efficiency-in-remote-teams/?sh=42bfa18a747c&#34;&gt;async communication acts as a leveler&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;4--how-are-product-decisions-made-what-role-do-engineers-play&#34;&gt;4. 🧪 How are product decisions made? What role do engineers play?&lt;/h3&gt;
&lt;p&gt;Are engineers treated like code monkeys, key pushers, or mere resources? In too many places, it&amp;rsquo;s the Engineering Manager, the only one who talks to the Product Manager.&lt;/p&gt;
&lt;p&gt;Are you passionate about the products you build? Then you want to make sure engineers join ideation sessions and even user interviews.&lt;/p&gt;
&lt;h3 id=&#34;5--what-does-career-progression-look-like&#34;&gt;5. 🧗‍♀️ What does career progression look like?&lt;/h3&gt;
&lt;p&gt;When you talk about expectations, it&amp;rsquo;s a great time to ask about career progression. Are great engineers forced into management as the only option available?&lt;/p&gt;
&lt;p&gt;As long as they document expectations, you should be able to check out those for the level above the one you applied for.&lt;/p&gt;
&lt;h3 id=&#34;6--how-do-you-run-your-1-1s-what-is-your-coaching-style&#34;&gt;6. 🤝 How do you run your 1-1s? What is your coaching style?&lt;/h3&gt;
&lt;p&gt;Many managers run them as status updates with little to no structure. Instead, 1-1 time should be &lt;a href=&#34;https://themanagershandbook.com/coaching-and-feedback/running-one-on-ones&#34;&gt;structured and belong to you&lt;/a&gt;. They are a place for you to give and receive feedback, build a trusting relationship, and discuss growth.&lt;/p&gt;
&lt;h3 id=&#34;7--whats-your-strategy-to-break-down-silos-and-avoid-a-small-bus-factor&#34;&gt;7. 🚌 What&amp;rsquo;s your strategy to break down silos and avoid a small bus factor?&lt;/h3&gt;
&lt;p&gt;Teams where people work in their little corner, will hamper your development. They also tend to descend into chaos when the person who does X is on holiday or ill. Presumably, you want to be part of a team where sharing knowledge is rewarded.&lt;/p&gt;
&lt;p&gt;The team may work in cross-functional groups, pair, organize tech talks or run guilds.&lt;/p&gt;
&lt;h3 id=&#34;8--think-of-the-last-couple-of-engineers-who-left-what-were-their-reasons&#34;&gt;8. 🚪 Think of the last couple of engineers who left. What were their reasons?&lt;/h3&gt;
&lt;p&gt;The reasons may be complex as people usually are. Now is the moment to try and sense whether you are about to step into a drama fest. Most people who leave because it was the natural step in their career do so in friendly ways.&lt;/p&gt;
&lt;p&gt;🙌 Want more?&lt;/p&gt;
&lt;p&gt;I recently wrote &lt;a href=&#34;./the-david-test-an-updated-joel-test-for-2022/&#34;&gt;The David test&lt;/a&gt;, a list of questions to evaluate engineering teams. You may also find inspiration there.&lt;/p&gt;
&lt;p&gt;Did you ever ask a question that provides you with lots of insight about the company you were about to join? Please do share!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How I got into Engineering management</title>
      <link>https://saltares.com/how-i-got-into-engineering-management/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/how-i-got-into-engineering-management/</guid>
      <description>Recently, people, who are considering becoming Engineering Managers, have asked about my own experience.
How did I get into it? How did I know it was what I wanted to do?
The answer may be interesting to others, so I wrote it down.
Let&amp;rsquo;s take a moment to note that becoming a manager is not a promotion. It&amp;rsquo;s a career change. There&amp;rsquo;s a myriad of reasons not to be a manager.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/management/girl-fork-road.png&#34; alt=&#34;A girl faces a fork in the road&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Recently, people, who are considering becoming Engineering Managers, have asked about my own experience.&lt;/p&gt;
&lt;p&gt;How did I get into it?
How did I know it was what I wanted to do?&lt;/p&gt;
&lt;p&gt;The answer may be interesting to others, so I wrote it down.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s take a moment to note that &lt;a href=&#34;https://themanagershandbook.com/introduction#it-and-x27-s-not-a-promotion-it-and-x27-s-a-career-change&#34;&gt;becoming a manager is not a promotion&lt;/a&gt;. It&amp;rsquo;s a career change. There&amp;rsquo;s a myriad of &lt;a href=&#34;https://charity.wtf/2019/09/08/reasons-not-to-be-a-manager/&#34;&gt;reasons not to be a manager&lt;/a&gt;. Being a great individual contributor (IC) does not mean you will be a great manager. And, leadership does not equal management.&lt;/p&gt;
&lt;p&gt;Additionally, my personal experience may not be similar to that of others. As a white, young, straight man, I have enjoyed loads of privilege throughout my career. Even as an immigrant. People often paid attention to what I had to say and, until recently, I didn&amp;rsquo;t even notice. My career is the result of hard work, (earned) luck, and privilege.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s get into it.&lt;/p&gt;
&lt;h3 id=&#34;what-i-did-before-becoming-a-manager&#34;&gt;What I did before becoming a manager&lt;/h3&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/management/crytek.png&#34; alt=&#34;crytek uk reception&#34;&gt;

&lt;/p&gt;
&lt;p&gt;My full-time career started at &lt;strong&gt;Crytek UK&lt;/strong&gt;, a video games studio, where I spent a couple of years. In the beginning, I was a Junior Developer. Later I was a mid-level one. I spent most of that time at the intersection between character AI and animation. I made the baddies and civilians look natural. The job required me to collaborate with many disciplines. It was quite the list: designers, animators, producers, and gameplay/AI/animation programmers. Later, I took on the role of Scrum Master. That role helped me focus on outcomes over my contributions. This also gave me some stakeholder management skills!&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/management/sony.png&#34; alt=&#34;entrance to Sony Computer Entertainment Europe&amp;amp;rsquo;s offices in London&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Right after, I spent six months at &lt;strong&gt;Sony&lt;/strong&gt; as an R&amp;amp;D Software Engineer. There, I had to manage up to improve our engineering practices and introduce CI. That is also when I started having some difficult conversations related to feedback. Those would prove invaluable later on.&lt;/p&gt;
&lt;p&gt;
  &lt;img src=&#34;./img/management/bloomberg.png&#34; alt=&#34;Bloomberg London Office&amp;amp;rsquo;s central staircase&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Then, I joined &lt;strong&gt;Bloomberg&lt;/strong&gt;, where things kicked off big time. During the first two years, my role was Senior Software Engineer. After that, I took on the Team Lead role, Bloomberg&amp;rsquo;s title for Engineering Manager in other places. In total, I was there for five years.&lt;/p&gt;
&lt;p&gt;Here are some of the things I did before becoming a team lead.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🕸️ &lt;strong&gt;Owning projects with many dependencies&lt;/strong&gt;: ours was an applications team. That meant we depended on many infrastructure teams. Projects usually had a significant coordination overhead.&lt;/li&gt;
&lt;li&gt;🏈 &lt;strong&gt;Being a Scrum master&lt;/strong&gt;: similarly to what I was doing at Crytek.&lt;/li&gt;
&lt;li&gt;👩‍💻 &lt;strong&gt;Mentoring and coaching&lt;/strong&gt;: we regularly had interns or new hires joining the team. A few times, I would be their mentor/buddy. This involved running my first 1-1s, setting goals, and giving feedback.&lt;/li&gt;
&lt;li&gt;🏫 &lt;strong&gt;Helping with the graduate training class&lt;/strong&gt;: Bloomberg ran several graduate cohorts a year. Each ran for 12 weeks. During the workshops, engineers helped the grads with their projects by talking through problems or doing code reviews.&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;Being an interviewer&lt;/strong&gt;: during my time there, I did hundreds of interviews and hired many engineers. I became more comfortable building rapport with new people and handling difficult situations. It made me think hard about the interview process and its faults. I wanted to be responsible for the process and improve it.&lt;/li&gt;
&lt;li&gt;📚 &lt;strong&gt;Taking leadership training&lt;/strong&gt;: everyone had to take this course before becoming a manager.&lt;/li&gt;
&lt;li&gt;🦸‍♂️ &lt;strong&gt;Having a mentor&lt;/strong&gt;: right after I became a people manager, I started working with a mentor. It was invaluable to have someone I could talk to about specific situations and peer review decisions. It helped me to explore and establish my management style and principles.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many of these opportunities would not have come my way without a supporting manager. At some point, my manager moved to another team. I was offered the role, and I took it.&lt;/p&gt;
&lt;h3 id=&#34;was-i-sure-i-wanted-to-get-into-management&#34;&gt;Was I sure I wanted to get into management?&lt;/h3&gt;
&lt;p&gt;Hell no!&lt;/p&gt;
&lt;p&gt;I loved the individual contributor (IC) role. Solving technical problems and building a product people enjoyed. Losing that was scary! In the end, two factors made me give it a try:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The incredible reward of amplifying the powers of the team. Helping people develop and breaking down some organizational silos felt terrific.&lt;/li&gt;
&lt;li&gt;I had seen people make the opposite transition, going from manager back to IC. It could be a &lt;a href=&#34;https://www.inc.com/jeff-haden/amazon-founder-jeff-bezos-this-is-how-successful-people-make-such-smart-decisions.html&#34;&gt;two-way door decision&lt;/a&gt; after all.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There&amp;rsquo;s no perfect answer, and you should come up with your own reasons for making the change. Arguably, one could go a long way being an amplifier of their team and helping people develop as an IC!&lt;/p&gt;
&lt;p&gt;🙌 Thanks for reading. I hope it was useful!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>5 books you should read as a new Engineering Manager</title>
      <link>https://saltares.com/5-books-you-should-read-as-a-new-engineering-manager/</link>
      <pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://saltares.com/5-books-you-should-read-as-a-new-engineering-manager/</guid>
      <description>Stepping into the engineering manager role is challenging. The skills that got you there are not the skills that will make you succeed in your new role. If that wasn&amp;rsquo;t enough, you will feel lonely. The folks who were your peers are now your reports. Those relationships are entirely different now.
You will need plenty of support.
Having a mentor was certainly invaluable, and you should aim to have one.</description>
      <content>&lt;p&gt;
  &lt;img src=&#34;./img/books/library.webp&#34; alt=&#34;modern library&#34;&gt;

&lt;/p&gt;
&lt;p&gt;Stepping into the engineering manager role is challenging. The skills that got you there are not the skills that will make you succeed in your new role. If that wasn&amp;rsquo;t enough, you will feel lonely. The folks who were your peers are now your reports. Those relationships are entirely different now.&lt;/p&gt;
&lt;p&gt;You will need plenty of support.&lt;/p&gt;
&lt;p&gt;Having a mentor was certainly invaluable, and you should aim to have one. A few selected books gave me tremendously helpful insights. There is a lot of faff on the Internet out there about leadership. So, I thought writing a list may help you find the good ones!&lt;/p&gt;
&lt;h2 id=&#34;-1-the-managers-handbookhttpsthemanagershandbookcom&#34;&gt;🙌 1. &lt;a href=&#34;https://themanagershandbook.com/&#34;&gt;The Manager&amp;rsquo;s Handbook&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Written by &lt;a href=&#34;https://alexmaccaw.com/&#34;&gt;Alex MacCaw&lt;/a&gt; as the actual handbook for managers at Clearbit. It covers a wide range of topics, such as self-awareness, hiring, coaching, expectation setting, and processes with down-to-earth, actionable advice.&lt;/p&gt;
&lt;p&gt;The book is quite opinionated, which may not be an entirely bad thing if what you need right now is a bit of structure before you find your management principles and style.&lt;/p&gt;
&lt;h2 id=&#34;-2-leading-snowflakeshttpsleadingsnowflakescom&#34;&gt;❄️ 2. &lt;a href=&#34;https://leadingsnowflakes.com/&#34;&gt;Leading Snowflakes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/orenellenbogen&#34;&gt;Oren Ellenbogen&lt;/a&gt; takes you through the transition from Maker to Manager in this short and to the point guide. Each chapter comes with a bit of &amp;ldquo;homework&amp;rdquo; to put what you learned into practice.&lt;/p&gt;
&lt;p&gt;As a bonus, you should subscribe to Oren&amp;rsquo;s newsletter &lt;a href=&#34;https://softwareleadweekly.com/&#34;&gt;Software Lead Weekly&lt;/a&gt;. It is &lt;strong&gt;the&lt;/strong&gt; engineering manager newsletter.&lt;/p&gt;
&lt;h2 id=&#34;-3-radical-candorhttpswwwradicalcandorcomthe-book&#34;&gt;🌟 3. &lt;a href=&#34;https://www.radicalcandor.com/the-book/&#34;&gt;Radical Candor&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As an Engineering Manager, you will need to have many challenging conversations. They can be a tremendous emotional drain. You need to let a team member know they are underperforming, but you don&amp;rsquo;t want to be an ass. I get it. Radical Candor by &lt;a href=&#34;https://twitter.com/kimballscott&#34;&gt;Kim Scott&lt;/a&gt; can give you some of the tools to deliver difficult feedback with care and make it easier on your mental health.&lt;/p&gt;
&lt;h2 id=&#34;-4-the-five-dysfunctions-of-a-teamhttpsenwikipediaorgwikithe_five_dysfunctions_of_a_team&#34;&gt;✋ 4. &lt;a href=&#34;https://en.wikipedia.org/wiki/The_Five_Dysfunctions_of_a_Team&#34;&gt;The Five Dysfunctions of a Team&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A fable by &lt;a href=&#34;https://en.wikipedia.org/wiki/Patrick_Lencioni&#34;&gt;Patrick Lencioni&lt;/a&gt; that tells the story of a newly appointed CEO who finds all sorts of politics and issues within her executive team. This book helped me realise that I no longer had one team, my engineering team. My teammates were now the engineering leadership group.&lt;/p&gt;
&lt;h2 id=&#34;-5-the-new-one-minute-managerhttpswwwkenblanchardcomstorethe-new-one-minute-manager&#34;&gt;🕑 5. &lt;a href=&#34;https://www.kenblanchard.com/Store/The-New-One-Minute-Manager&#34;&gt;The New One Minute Manager&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another fable, this time by &lt;a href=&#34;https://en.wikipedia.org/wiki/Ken_Blanchard&#34;&gt;Ken Blanchard&lt;/a&gt;. Perhaps this one is a bit dated, but I remember it dearly as it is one of the first ones I read. It tells the story of a new manager who seeks the knowledge of the legendary One Minute Manager.&lt;/p&gt;
&lt;p&gt;🙌 Thanks for reading! Did you notice how only one of these is specific to engineering?&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
