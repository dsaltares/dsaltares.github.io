{"pageProps":{"metadata":{"path":"content/post/2011-08-26-memoria-de-iberogre-y-sion-tower.mdx","title":"Memoria de IberOgre y Sion Tower","date":"2011-08-26T10:51:13.000Z","categories":["Games development"],"series":null,"description":null,"slug":"memoria-de-iberogre-y-sion-tower","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Después de un mes de trabajo intenso y dolores provocados por teclear, he finalizado la \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://forja.rediris.es/frs/download.php/2392/memoria.pdf\",\n          children: \"memoria de Proyecto fin de Carrera de IberOgre y Sion Tower\"\n        })\n      }), \". Es una de las culpables de la escasez de actividad pero en ella podréis encontrar recopilada y ampliada la documentación que he ido publicando en este blog.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Se explica como se han diseñado e implementado las características más importantes de Sion Tower y cómo se ha ideado la estructura de IberOgre. No es una lectura de placer pero quizás a alguien le resulte de utilidad ya sea porque necesita una memoria de referencia o porque quiere conocer más del proyecto.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"¡Paciencia porque dentro de poco llegará Sion Tower v1.0!\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}