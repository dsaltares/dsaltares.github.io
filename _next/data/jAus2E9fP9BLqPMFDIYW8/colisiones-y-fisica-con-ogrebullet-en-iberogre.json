{"pageProps":{"metadata":{"path":"content/post/2011-04-04-colisiones-y-fisica-con-ogrebullet-en-iberogre.mdx","title":"Colisiones y física con OgreBullet en IberOgre","date":"2011-04-04T10:00:34.000Z","categories":["Games development"],"series":null,"description":null,"slug":"colisiones-y-fisica-con-ogrebullet-en-iberogre","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    strong: \"strong\",\n    em: \"em\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Vimeo} = _components;\n  if (!Vimeo) _missingMdxReference(\"Vimeo\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/bullet_logo.png\",\n      alt: \"bullet_logo.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Vuelve la actividad a la wiki de Ogre en español\"\n      }), \" gracias a Alberto Cejas Sánchez. El compañero responsable del proyecto \", _jsx(_components.em, {\n        children: _jsx(_components.a, {\n          href: \"http://futbolesasi.wordpress.com/\",\n          children: \"Fútbol es Así\"\n        })\n      }), \" estaba trabajando en la detección de colisiones para su videojuego y finalmente decidió utilizar el wrapper de \", _jsx(_components.a, {\n        href: \"http://bulletphysics.org/wordpress/\",\n        children: \"Bullet\"\n      }), \" para Ogre. Tras dar los primeros pasos ha publicado \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://osl2.uca.es/iberogre/index.php/Colisiones_y_F%C3%ADsicas_con_OgreBullet\",\n          children: \"\\\"Colisiones y físicas con OgreBullet\\\"\"\n        })\n      }), \". Por el momento ha publicado la instalación en GNU/Linux (de la que no existía apenas información) y Windows, más adelante irá completando el artículo. Muchísimas gracias a Alberto por su nueva colaboración.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/wp/gtaiv.jpg\",\n      alt: \"gtaiv.jpg\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Bullet es una de las bibliotecas libres (licencia zlib) de \", _jsx(_components.strong, {\n        children: \"detección de colisiones y simulaciones físicas\"\n      }), \" más potentes que existe. Por su extrema capacidad me pareció excesivo utilizarlo en Sion Tower ya que no requería interacciones físicas. No obstante, cualquier interesado en incorporar este elemento en su videojuego debería considerar utilizar Bullet. Entre sus \", _jsx(_components.strong, {\n        children: \"características\"\n      }), \" se encuentran:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Colisiones entre cuerpos rígidos y blandos de forma discreta o continua._ Varias formas básicas: esferas, cajas, cilindros, conos, poliedro convexos, etc._ Simulación de ropa, cuerdas y objetos deformables.* Restricciones para cuerpos más realistas.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Bullet se ha \", _jsx(_components.strong, {\n        children: \"utilizado en decenas de proyectos\"\n      }), \" de renombre como Blender, Cinema 4D, Grand Theft Auto IV o Trials HD. En el siguiente vídeo podéis ver un pequeño ejemplo del potencial de la biblioteca.\"]\n    }), \"\\n\", _jsx(Vimeo, {\n      videoId: \"14626222\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}