{"pageProps":{"metadata":{"path":"content/apps & tools/finlight.mdx","title":"Finlight","date":"2024-09-27T00:00:00.000Z","categories":[],"series":null,"description":"Finlight is a personal finance app","slug":"finlight","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":["finlight","personal finance","budget","financial planning","sqlite","react","typescript"],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    img: \"img\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {ImageGallery} = _components;\n  if (!ImageGallery) _missingMdxReference(\"ImageGallery\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"💸 \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/finlight-electron\",\n        children: \"Finlight\"\n      }), \" is a desktop personal finance app. It's free and open source.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/finlight/finlight.png\",\n      alt: \"finlight logo\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I made it because I couldn't find a personal finance app that met my needs.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"🚀 Features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"🔐 Local and privacy first, you 100% own your data.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"🏦 Multi-account.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"💱 Multi-currency support with currency normalisation.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"💸 Track income, expenses and account transfers (double-entry).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"📊 Insights.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"💰 Budgeting.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"🙌 Cross platform: Linux, Windows and Mac.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"📸 Screenshots\"\n    }), \"\\n\", _jsx(ImageGallery, {\n      images: ['/img/finlight/screenshot_013.png', '/img/finlight/screenshot_012.png', '/img/finlight/screenshot_011.png', '/img/finlight/screenshot_010.png', '/img/finlight/screenshot_009.png', '/img/finlight/screenshot_008.png', '/img/finlight/screenshot_007.png', '/img/finlight/screenshot_006.png', '/img/finlight/screenshot_005.png', '/img/finlight/screenshot_004.png', '/img/finlight/screenshot_003.png', '/img/finlight/screenshot_002.png', '/img/finlight/screenshot_001.png']\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"💻 Technical details\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dsaltares/finlight-electron\",\n        children: \"Finlight\"\n      }), \" is open source under the MIT license. Contributions are welcome! The stack I used is:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Typescript\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"React\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Electron\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"React Router\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"tRPC + React Query\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Kysely + SQLite\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Material UI\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"recharts\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}