{"pageProps":{"metadata":{"path":"content/apps & tools/beetbill.mdx","title":"Beet Bill","date":"2022-11-01T00:00:00.000Z","categories":[],"series":null,"description":"Beet Bill is an invoicing app for freelancers and small businesses","slug":"beet-bill","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":["beet bill","invoicing","freelancing","business","fintech","apps","React","react query","nextjs","postgresql"],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    img: \"img\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {ImageGallery} = _components;\n  if (!ImageGallery) _missingMdxReference(\"ImageGallery\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"ðŸŒ± \", _jsx(_components.a, {\n        href: \"https://app.beetbill.com/\",\n        children: \"Beet Bill\"\n      }), \" is an invoicing web app for freelancers and small businesses. It's free, open source and completely add free.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/beetbill/logo.png\",\n      alt: \"beet bit logo\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I made it as a side project alongside my good friend and designer \", _jsx(_components.a, {\n        href: \"https://www.linkedin.com/in/cristian-iordan-26b1abb7/\",\n        children: \"Cristi\"\n      }), \". I use it today to manage my own invoices and I'm very happy with it!\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"ðŸ“¸ Screenshots\"\n    }), \"\\n\", _jsx(ImageGallery, {\n      images: ['/img/beetbill/screenshot_001.png', '/img/beetbill/screenshot_002.png', '/img/beetbill/screenshot_003.png', '/img/beetbill/screenshot_004.png', '/img/beetbill/screenshot_005.png', '/img/beetbill/screenshot_006.png']\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"ðŸ’» Technical details\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dsaltares/beetbill\",\n        children: \"Beet Bill is open source\"\n      }), \" under the MIT license. Contributions are welcome! The stack I used is:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Typescript\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Next.js\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tailwind CSS\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"tRPC + React Query\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Prisma + PostgreSQL\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"react-pdf\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}