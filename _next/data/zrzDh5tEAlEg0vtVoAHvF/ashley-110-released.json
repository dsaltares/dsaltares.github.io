{"pageProps":{"metadata":{"path":"content/post/2014-08-10-ashley-1-1-0-released.mdx","title":"Ashley 1.1.0 released","date":"2014-08-10T17:22:29.000Z","categories":["Games development","Projects"],"series":null,"description":null,"slug":"ashley-110-released","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/ashley/ashley-logo.png\",\n      alt: \"ashley-logo.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Just under a month of the first official release we are ready to release a new stable version: Ashley 1.1.0. Here is the list of changes.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/8c98e9799bb6cc65cf61669eed36d7f8f04a2da4#diff-d41d8cd98f00b204e9800998ecf8427e\",\n            children: \"Performance improvements\"\n          })\n        }), \": massive performance gains with O(1) component retrieval through \", _jsx(_components.code, {\n          children: \"ComponentMapper\"\n        }), \" and the use of \", _jsx(_components.a, {\n          href: \"https://github.com/libgdx/ashley/commit/db641f9697719e97d31017e46ea2003a43eb83cd\",\n          children: _jsx(_components.code, {\n            children: \"Array<Entity>\"\n          })\n        }), \" rather than \", _jsx(_components.code, {\n          children: \"IntMap<Entity>\"\n        }), \". Unfortunately this changes the API slightly, but hopefully you guys will appreciate the benefits.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/wiki\",\n            children: \"Complete Ashley manual\"\n          })\n        }), \": now the wiki has a lot more content, it fully covers Ashley. The rest is sugar.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/3182782dfd71e13f0bf1c03490512d91921117a3\",\n            children: \"API Cleanup\"\n          })\n        }), \": renames \", _jsx(_components.code, {\n          children: \"Family.getFamilyFor()\"\n        }), \" to \", _jsx(_components.code, {\n          children: \"Family.getFor()\"\n        }), \" for simplicity.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/569f089f9236dc8c2da09f4fe3b4d33880745d8a\",\n            children: \"Configurable pools\"\n          })\n        }), \": \", _jsx(_components.code, {\n          children: \"PooledEngine\"\n        }), \" now accepts the initial and maximum sizes for the entity and components pools. This will add a lot more flexibility to bigger games.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/aa97ecbf8344ea6de5afeb608ac65ccd12e80965\",\n            children: \"Libgdx 1.3.0\"\n          })\n        }), \": Ashley now depends on gdx-core 1.3.0.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Keep the feedback coming and happy coding!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}