{"pageProps":{"metadata":{"path":"content/post/2012-04-30-urban-race-has-been-freed.mdx","title":"Urban Race has been freed","date":"2012-04-30T21:22:16.000Z","categories":["Games development"],"series":null,"description":null,"slug":"urban-race-has-been-freed","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/urbanrace.jpg\",\n      alt: \"urbanrace.jpg\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A few months ago I developed \", _jsx(_components.a, {\n        href: \"/games/urban-race/\",\n        children: \"Urban Race\"\n      }), \", a very simple (and quite lame) time attack racing game using XNA. It was a University project so I couldn't release the source until it was graded but then, I totally forgot about it. Recently, a reader asked me to publish the source and here we are. Please, bare in mind it's for educational purposes, it was developed in one month without previous knowledge of neither C# or XNA and it's not intended to be a fully playable product.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://code.google.com/p/urban-race/\",\n          children: \"Urban Race in Google Code\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://urban-race.googlecode.com/files/urbanrace-essay.pdf\",\n          children: \"Urban Race essay (documentation)\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"http://urban-race.googlecode.com/files/urbanrace-1.0-win.zip\",\n          children: \"Urban Race 1.0 for Windows\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I usually document my projects with Doxygen and several articles or tutorials, this time has been different. At least I've uploaded a PDF file with the documentation I submitted for my project to be graded. You\\\"ll have to excuse me for lack of further and more accessible documentation but I don't have much time now and, prior to this moment, I didn't think this game was worth making public.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Anyways, you can freely access the source, reuse components and re-share. Bare in mind that the code is under \", _jsx(_components.a, {\n        href: \"http://www.gnu.org/licenses/gpl-3.0.html\",\n        children: \"GPL v3\"\n      }), \" and the media is under \", _jsx(_components.a, {\n        href: \"http://creativecommons.org/licenses/by-nc/3.0/\",\n        children: \"Creative Commons 3.0 BY-NC\"\n      }), \" so, please, stick to their conditions.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}