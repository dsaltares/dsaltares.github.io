{"pageProps":{"metadata":{"path":"content/apps & tools/glapse.mdx","title":"gLapse","date":"2011-05-31T22:33:55.000Z","categories":[],"series":null,"description":null,"slug":"glapse","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/glapse/glapse-logo.png\",\n      alt: \"glapse\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Linux tool that allows you take screenshots at fixed intervals and glue them together to create a time lapse video. It's actively used in the \", _jsx(_components.a, {\n        href: \"http://www.ludumdare.com/\",\n        children: \"Ludum Dare 48h game competition\"\n      }), \" by several contestants to record their development process.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Role\"\n        }), \": project leader and sole programmer\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Year\"\n        }), \": 2011\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Development time\"\n        }), \": 2 weeks\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Technology\"\n        }), \": Python language using pyGTK\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Download\"\n        }), \": \", _jsx(_components.a, {\n          href: \"https://github.com/downloads/siondream/glapse/glapse_0.3_all.deb\",\n          children: \"gLapse 0.3\"\n        }), \", \", _jsx(_components.a, {\n          href: \"https://github.com/dsaltares/glapse\",\n          children: \"source code\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Screenshots\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/glapse/glapse-02.png\",\n      alt: \"glapse\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Features\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Take PNG screenshots with custom interval and quality.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Create a video using saved screenshots with custom FPS.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Multilanguage: English, Spanish, German, French and Japanese.\"\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}