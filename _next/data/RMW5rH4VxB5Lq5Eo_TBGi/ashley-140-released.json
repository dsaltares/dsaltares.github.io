{"pageProps":{"metadata":{"path":"content/post/2015-03-14-ashley-1-4-0-released.mdx","title":"Ashley 1.4.0 released","date":"2015-03-14T16:04:37.000Z","categories":["Games development","Projects"],"series":null,"description":null,"slug":"ashley-140-released","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/ashley/ashley-logo.png\",\n      alt: \"ashley-logo.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A new version of \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley\",\n        children: \"Ashley\"\n      }), \", your favourite component based entity framework is out. The \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley/releases/tag/ashley-1.4.0\",\n        children: \"1.4.0\"\n      }), \" version comes with a bunch of bug fixes that, hopefully, will iron out some of the rough edges in Ashley.\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/d6222d9ee0cca6f06dd61b04bae6d092497425a5\",\n            children: \"API deprecation\"\n          })\n        }), \": finallt removed the \", _jsx(_components.code, {\n          children: \"Family.getFor()\"\n        }), \" methods. In order to retrieve a family, you can do \", _jsx(_components.code, {\n          children: \"Family.all().one().exclude().get()\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/issues/137\",\n            children: \"API change\"\n          })\n        }), \": makes family \", _jsx(_components.code, {\n          children: \"Builder\"\n        }), \" package protected.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/356cf4097f7c870cccc67cffca62ff3f32f103da\",\n            children: \"Bug fix\"\n          })\n        }), \": \", _jsx(_components.code, {\n          children: \"EntityOperation\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"ComponentOperation\"\n        }), \" are now properly reset when put back into their pools. This doesn't affect the API at all and it's an implementation detail fix.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/eff243f65e98a57c5e1a8045f85465cd1acf085d\",\n            children: \"Bug fix\"\n          })\n        }), \": fixes \", _jsx(_components.code, {\n          children: \"PooledEngine\"\n        }), \" always returning new components.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/issues/135\",\n            children: \"Bug fix\"\n          })\n        }), \": fixes GWT build.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: _jsx(_components.a, {\n            href: \"https://github.com/libgdx/ashley/commit/cf7a02006d2269cd64976de6e7b56bd7553708de\",\n            children: \"Bug fix\"\n          })\n        }), \": avoids removing a \", _jsx(_components.code, {\n          children: \"PooledEntity\"\n        }), \" twice.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To use it, change your dependency to \", _jsx(_components.code, {\n        children: \"com.badlogicgames.gdx:ashley:1.4.0\"\n      }), \". The new nightly dependency is \", _jsx(_components.code, {\n        children: \"com.badlogicgames.gdx:ashley:1.4.1-SNAPSHOT\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As usual, \", _jsx(_components.a, {\n        href: \"http://libgdx.badlogicgames.com:8080/job/ashley/\",\n        children: \"all unit tests are passing\"\n      }), \" and the wiki is up to date. Please keep up the good work sending more pull requests and reporting bugs.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}