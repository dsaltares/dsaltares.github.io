{"pageProps":{"metadata":{"path":"content/post/2010-12-08-nuevos-articulos-escenas-nodos-y-exportacion.mdx","title":"Nuevos artículos: escenas, nodos y exportación","date":"2010-12-08T11:26:02.000Z","categories":["Games development"],"series":null,"description":null,"slug":"nuevos-articulos-escenas-nodos-y-exportacion","readingTime":"3 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/escenas-nodos-exportacion.png\",\n      alt: \"escenas-nodos-exportacion.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"El puente se acaba y , entre otras cosas, me ha permitido darle un pequeño pero \", _jsxs(_components.strong, {\n        children: [\"importante impulso a \", _jsx(_components.a, {\n          href: \"http://osl2.uca.es/iberogre/index.php/P%C3%A1gina_Principal\",\n          children: \"IberOgre\"\n        })]\n      }), \". Ligeras correcciones o ampliaciones en varios artículos y un par completamente nuevos. \", _jsx(_components.strong, {\n        children: \"La wiki va sobre ruedas\"\n      }), \" y no hemos tenido problemas de disponibilidad desde el cambio de servidor, ¡gracias de nuevo a la OSLUCA! Lo que sigue es un pequeño resumen del trabajo de los últimos días.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"http://osl2.uca.es/iberogre/index.php/Creaci%C3%B3n_b%C3%A1sica_de_escenas\",\n        children: \"Creación básica de escenas\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Hasta el momento sólo conocíamos el proceso de inicialización de Ogre. Este artículo pretendía continuar desde dicho punto y \", _jsx(_components.strong, {\n        children: \"llegar hasta la carga de un modelo 3D en pantalla\"\n      }), \". Debido a la multitud de pasos necesarios y las distintas vías que se nos abren, el texto resultante tiene una extensión considerable. Finalmente se tratan los siguientes puntos:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Creación de una ventana.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Elección y creación del gestor de escenas adecuado (SceneManager).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"La cámara y el frustrum.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"La utilidad de los viewports, juego a pantalla dividida.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Creación de una escena, añadiendo nodos con entidades adjuntas.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Dos aproximaciones al main loop en Ogre.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Ejemplo comentado a modo de resumen.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"En mi opinión, se trata de un \", _jsx(_components.strong, {\n        children: \"artículo de máxima importancia\"\n      }), \" ya que es el primero en el que comenzamos a renderizar elementos. Llevaba cierto tiempo publicado y estos días me he dedicado a completarlo (prestando especial atención al ejemplo).\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"http://osl2.uca.es/iberogre/index.php/Manipulaci%C3%B3n_de_nodos#Ejemplo\",\n        children: \"Manipulación de nodos\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"¿Qué sería de nuestro videojuego si no pudiésemos darle movimiento a los elementos que lo componen? Este artículo se centra en la \", _jsx(_components.strong, {\n        children: \"manipulación del scene graph\"\n      }), \" tanto en cuanto a su jerarquía como a sus componentes individuales (SceneNodes). Básicamente se abarcan los siguientes aspectos:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Sistema de coordenadas de Ogre.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Información de un nodo, objetos adjuntos y descendientes.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Espacios de transformación.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Movimiento, rotación y escalado.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Control de tiempo en el bucle de juego.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ejemplo. El artículo aún no está completo ya que \", _jsx(_components.strong, {\n          children: \"le falta el ejemplo principal\"\n        }), \" y un par de esquemas explicativos.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"He querido publicarlo para que los lectores puedan seguir aprendiendo y reportando los problemas encontrados (aunque creo que es correcto en su mayoría).\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"http://osl2.uca.es/iberogre/index.php/Exportar_modelos_desde_Blender\",\n        children: \"Exportar modelos desde Blender\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ogre sólo acepta su propio formato binario \", _jsx(_components.em, {\n        children: \".mesh\"\n      }), \" a la hora de cargar modelos tridimensionales por razones de eficiencia y optimización. Esto significa que \", _jsx(_components.strong, {\n        children: \"debemos exportar nuestras creaciones\"\n      }), \" a dicho formato. En IberOgre daremos soporte a Blender y su \", _jsx(_components.strong, {\n        children: \"magnífico script Blender Exporter\"\n      }), \". En este artículo encontraréis:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Instalación de Blender Exporter (Windows y GNU/Linux).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Proceso de exportación de un modelo con todas las opciones comentadas.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Recomendaciones a la hora de realizar una exportación.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"El trabajo duro continua\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Durante la última semana he estado trabajando fuerte y se ha notado en la forja de Red Iris. \", _jsx(_components.strong, {\n        children: \"Un porcentaje de actividad que rozaba el 100% y me situaba entre los 5 proyectos más activos\"\n      }), \". ¡Creo que para contar con un único desarrollador es mucho decir! Espero continuar siendo productivo y generar más contenido pronto.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}