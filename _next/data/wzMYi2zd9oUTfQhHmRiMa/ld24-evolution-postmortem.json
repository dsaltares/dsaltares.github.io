{"pageProps":{"metadata":{"path":"content/post/2012-08-27-ld24-evolution-postmortem.mdx","title":"LD#24: Evolution Postmortem","date":"2012-08-27T21:42:38.000Z","categories":["Games development"],"series":null,"description":null,"slug":"ld24-evolution-postmortem","readingTime":"3 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    h3: \"h3\",\n    a: \"a\",\n    strong: \"strong\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/ld24/evolution.png\",\n      alt: \"evolution.png\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.a, {\n        href: \"http://www.ludumdare.com/compo/ludum-dare-24/?action=preview&uid=3661\",\n        children: _jsx(_components.strong, {\n          children: \"Play the game!\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ludum Dare #24 is over after an exhausting crazy weekend but, above all, it´s been a ton of fun. Joining the Dare has proven to be an excellent idea and I believe it\\\"d be right to say it's has not gone too bad after all, considering it was my first time. Here's a little postmortem on the experience.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.strong, {\n        children: \"Evolution – The survival of the fittest\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The competition's theme was Evolution so I went for a classic 2D platformer starred by a funny caveman who has to get through the level while killing dinosaurs by jumping on them or throwing rocks which he collects himself. Yes, I\\\"m aware I\\\"m not going to get many points for sticking to the theme.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Evolution is written in Java using the wonderful libgdx framework and my personal code base (which I made available prior to the Dare).\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/ld24/evolution-caveman-01.jpg\",\n      alt: \"evolution-caveman-01.jpg\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.strong, {\n        children: \"What went right\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Completion\"\n        }), \": I guess having delivered something at my first attempt it's a win, even though the game lacks in many aspects. Time management was not completely disastrous.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Graphics\"\n        }), \": Evolution has received very positive feedback art wise and being a programmer it feels a bit bizarre. The process followed to create and animate character was: sketching on paper, vectorizing and colouring with Inkscape, animation with Flash and Texture Packer to produce spritesheets. I\\\"ll keep working on this line.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Multi platform\"\n        }), \": libgdx was a good decision, not only is a very nice and powerful framework but also allows to target several platforms with no to very little effort.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Box2D\"\n        }), \": using this popular physics engine empowered me to implement the basic movement through the level extremely quickly.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Code base\"\n        }), \": although I discovered a fair amount of bugs in my code base, it behaved quite nicely. I also got a ton of ideas to improve it.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/ld24/evolution-caveman-02.jpg\",\n      alt: \"evolution-caveman-02.jpg\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.strong, {\n        children: \"What went wrong\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Gameplay polish\"\n        }), \": I didn't invest enough time to polish the gameplay, tweak values and play test the game and that reflects on the final build. It's a noob mistake and that makes me sad.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Content\"\n        }), \": I decided to invest the last moments of the competition in the little polishing I did instead of content creation which resulted in having just one level. However, I think it was the right call, I simply didn't have time for everything.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Asset pipeline\"\n        }), \": too much time was wasted in getting the export process right for some of the assets. On the bright side, I've learnt a lot and it won't happen next time.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"HTML5 port\"\n        }), \": it would have been awesome to have a browser version of my game with no third party plugins requirements so people could just play. Too bad my HTML5 port had a bad crash.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/ld24/evolution-caveman-03.jpg\",\n      alt: \"evolution-caveman-03.jpg\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.strong, {\n        children: \"Conclusions\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I can't stress enough how awesome of an experience it was. So many emotions mixed in the pot: stress, joy, thrill, exhaustion and so many more. I learned so much and felt great for having been able to deliver something in such a short timespan. I will definitely try to be in next time.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Looking forward to get more feedback during the voting phase, best of luck to all my fellow Ludum Darers!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}