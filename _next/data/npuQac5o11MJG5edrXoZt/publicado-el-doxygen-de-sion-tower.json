{"pageProps":{"metadata":{"path":"content/post/2011-08-17-publicado-el-doxygen-de-sion-tower.mdx","title":"Publicado el Doxygen de Sion Tower","date":"2011-08-17T17:00:29.000Z","categories":["Games development"],"series":null,"description":null,"slug":"publicado-el-doxygen-de-sion-tower","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/doxygen.webp\",\n      alt: \"doxygen.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"La \", _jsx(_components.strong, {\n        children: \"documentación del código de Sion Tower 1.0\"\n      }), \" ha sido generada de forma automática con \", _jsx(_components.a, {\n        href: \"http://www.stack.nl/~dimitri/doxygen/\",\n        children: \"Doxygen\"\n      }), \", una estupenda herramienta libre para realizar esta tarea. El resultado es una \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://saltares.com/docs/siontower-doxygen/\",\n          children: \"sencilla página web\"\n        })\n      }), \" que contiene información sobre todas las clases, métodos y atributos del sistema. Espero que sea útil a aquel que desee comprender cómo funciona el juego de forma interna.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Poco a poco voy preparando el \", _jsx(_components.strong, {\n        children: \"lanzamiento formal de la versión 1.0\"\n      }), \" del videojuego de acción y estrategia Sion Tower. Espero poder publicar la versión en una semana aproximadamente.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"¡Hasta pronto!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}