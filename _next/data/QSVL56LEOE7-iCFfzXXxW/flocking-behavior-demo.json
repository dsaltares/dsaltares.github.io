{"pageProps":{"metadata":{"path":"content/post/2011-11-26-flocking-behavior-demo.mdx","title":"Flocking behavior demo","date":"2011-11-26T08:39:02.000Z","categories":["Games development"],"series":null,"description":null,"slug":"flocking-behavior-demo","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {YouTube} = _components;\n  if (!YouTube) _missingMdxReference(\"YouTube\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(YouTube, {\n      videoId: \"og9qYMzx3V0\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I've just finished this simple \", _jsx(_components.strong, {\n        children: \"flocking behavior demo\"\n      }), \" based on the \", _jsx(_components.a, {\n        href: \"http://en.wikipedia.org/wiki/Flocking_(behavior)\",\n        children: \"3 Reynolds rules\"\n      }), \": separation, cohesion and alignment. It was part of a coursework for the \", _jsx(_components.em, {\n        children: \"Strategy & Intelligent Games\"\n      }), \" module I\\\"m taking here in Kingston University. I know it's not precisely pretty but at least the boids are moving in a nice way. It's written in C++ using the despicable \", _jsx(_components.a, {\n        href: \"http://www.openscenegraph.org/\",\n        children: \"Open Scene Graph\"\n      }), \" library (such an uncomfortable API).\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Features\"\n      }), \":\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"3 Reynolds rules: separation, cohesion and alignment.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Collision avoidance.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"User interaction: dynamic mouse seeking or avoidance.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Steering behaviors blending.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Configurable parameters using an XML options file.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Most of the algorithms have been extracted from the \", _jsx(_components.em, {\n        children: \"Artificial Intelligence for Games\"\n      }), \" book written by Ian Millington and John Funge. If you\\\"re interested in the topic it's totally a must read, I strongly recommend it.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}