{"pageProps":{"metadata":{"path":"content/post/2022-10-18-definition-of-done.mdx","title":"A Definition of Done to align everyone","date":"2022-10-18T00:00:00.000Z","categories":["Leadership"],"series":null,"description":"Your company already has a definition of done, even if it's not writen down. Here is a template to keep everybody align on expected quality.","slug":"a-definition-of-done-to-align-everyone","readingTime":"3 min read","draft":false,"disableComments":false,"keywords":["engineering leadership","definition of done","software delivery","expectations"],"banner":"/img/trees.webp"},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/trees.webp\",\n      alt: \"Path going into distance with trees at each side\",\n      title: \"By Annette Schuman on Unsplash\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"Definition of Done\"\n        }), \" - the criteria to meet to put a ticket in the Done column.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Everyone has a definition of done in their heads. It doesn't matter whether it is written down and standardised across an organisation. Each of us has a mental model for the quality standards we want to achieve and expect of others. Some folks may consider a user story done even without any automated tests, while others may deem it unacceptable. There are no absolute truths here, only alignment or misalignment.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Having a well-established Definition of Done brings the following advantages.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"🤝 Shared understanding and expectations for what quality means.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"💯 Giving feedback is more effortless.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"⚖️ What matters and what we're willing to compromise on is explicit.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"🚀 Onboarding is easier for both full-time and contractors\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's an example definition of done. You should adapt it to the context and priorities of your organisation.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"🌊 UX.\"\n        }), \" Does the feature/workflow solve the user's problem, and does it meet the acceptance criteria? Beyond that, how does it feel to use? Is the UI responsive or sluggish? What does the network tab look like? Does the user receive appropriate feedback?\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"🧪 Tests.\"\n        }), \" Every change must come with high-quality test coverage to have sufficient confidence to deploy it to production. Have you thought about the right combination between unit, integration, E2E and manual tests? Make sure to follow the existing testing principles.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"🔐 Security.\"\n        }), \" Are you following security best practices? Have you appropriately tested access control business logic? Are you sure you are not logging \", _jsx(_components.a, {\n          href: \"https://www.investopedia.com/terms/p/personally-identifiable-information-pii.asp\",\n          children: \"PII\"\n        }), \"?\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"📈 Analytics.\"\n        }), \" Are you recording user activity in a way that will allow the team to effectively measure the success of the change and make data-informed decisions in the future? Have you discussed it with the PM in your team?\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"🕵️‍♂️ Observability.\"\n        }), \" Assume things will go wrong with the change/feature because they will. Do you have enough mechanisms in place to quickly identify what the problem is? Have you considered logging, alerting and tracing?\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"♿ Accessibility.\"\n        }), \" Is the feature accessible? Are you using appropriate markup? What is the experience like for keyboard-only users and people with assistive technologies? For example, we aim at WCAG 2.1 AA. To learn more, you can look at the \", _jsx(_components.a, {\n          href: \"https://www.w3.org/WAI/standards-guidelines/wcag/\",\n          children: \"WCAG guidelines\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"📚 Documentation.\"\n        }), \" When “future you” or someone else in the team wants to make a change in the same area, will they find their way around? Have you added appropriate documentation or updated the existing one?\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Your organisation may not need a written Definition of Done. That's fine! Just be aware that you already have one, whether intentional or accidental. If you want to implement one, feel free to use mine as a starter. There are many other examples out there worth checking out too!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}