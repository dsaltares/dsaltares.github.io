{"pageProps":{"metadata":{"path":"content/post/2014-07-20-ashley-entity-framework.mdx","title":"Ashley entity framework","date":"2014-07-20T19:31:53.000Z","categories":["Games development"],"series":null,"description":null,"slug":"ashley-entity-framework","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"Loads of stuff in the pipeline lately: new job, finishing \", _jsx(_components.a, {\n        href: \"/libgdx-cross-platform-game-development-cookbook/\",\n        children: \"my book\"\n      }), \" and some \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley\",\n        children: \"Ashley\"\n      }), \" development. What? You don't know what Ashley is? Here is a brief, straight from GitHub.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"A tiny \", _jsx(_components.a, {\n          href: \"http://entity-systems.wikidot.com/\",\n          children: \"entity framework\"\n        }), \" written in Java. It's inspired by frameworks like \", _jsx(_components.a, {\n          href: \"http://www.ashframework.org/\",\n          children: \"Ash\"\n        }), \" (hence the name) and \", _jsx(_components.a, {\n          href: \"http://gamadu.com/artemis/\",\n          children: \"Artemis\"\n        }), \". Ashley tries to be a high-performance entity framework without the use of black-magic and thus making the API easy and transparent to use.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Long story short: Ashley is awesome.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/stbachmann\",\n        children: \"Stefan Batchmann\"\n      }), \" started the project on February 2013. Since \", _jsx(_components.a, {\n        href: \"http://robotality.com/blog/\",\n        children: \"he is rather busy making actual games\"\n      }), \", he asked me to look after the project and I gladly accepted.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Entity systems are really cool and can help you write cleaner game code, avoiding the classic inheritance hierarchy hell. \", _jsx(_components.a, {\n        href: \"http://www.richardlord.net/blog/what-is-an-entity-framework\",\n        children: \"This article\"\n      }), \" does a pretty good job at explaining the benefits of entity systems.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It's funny how strongly opinionated developers seem to feel towards entity systems. Some love them, some hate them. Have a read, experiment with Ashley and decide for yourself.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley/blob/master/README.md\",\n        children: \"readme\"\n      }), \" will help to you get started. Please, do not hesitate to \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley/issues?state=open\",\n        children: \"open an issue\"\n      }), \" if you find any problems. If you send a \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/ashley/pulls\",\n        children: \"pull request\"\n      }), \", you will have our unconditional love.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Expect more Ashley related articles soon!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}