{"pageProps":{"metadata":{"path":"content/libgdx-cross-platform-game-development-cookbook.mdx","title":"Libgdx Cross-platform Game Development Cookbook","date":"2016-11-13T17:05:16.000Z","categories":[],"series":null,"description":null,"slug":"libgdx-cross-platform-game-development-cookbook","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[]},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/libgdx-cookbook-cover.png\",\n      alt: \"libgdx-cookbook\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This is the Libgdx book I wrote with my colleague \", _jsx(_components.a, {\n        href: \"https://www.linkedin.com/profile/view?id=238086242&authType=NAME_SEARCH&authToken=puEt&locale=en_US&trk=tyah2&trkInfo=tarId%3A1405883761150%2Ctas%3Aalberto%20cejas%2Cidx%3A1-1-1\",\n        children: \"Alberto Cejas\"\n      }), \". Note that the e-book version comes in multiple formats and it's DRM-free.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Overview\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Gain an in-depth understanding of every Libgdx subsystem, including 2D graphics, input, audio, file extensions, and third-party libraries.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Write once and deploy to Windows, Linux, Mac, Android, iOS, and browsers.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Full of uniquely structured recipes that help you get the most out of Libgdx.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"What you will learn from this book\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Wield the power of the 2D graphics API: get to grips with textures, atlases, particles, fonts, and shaders.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Manage input from different devices, including touch, keyboard, mouse, gamepad, and accelerometer.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Increase player immersion with the Libgdx audio API.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Quickly design maps with an editor and load them directly into your game.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Exploit the 2D stage features to build great user interfaces.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Create amazing physics simulations with Box2D.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Discover the third-party ecosystem by exploring animation, lightning, entity systems, and many more.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Master the deployment process and reach a wide audience.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"About Libgdx\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"http://libgdx.badlogicgames.com/\",\n        children: \"Libgdx\"\n      }), \" is an extremely popular open source, lightning fast, cross-platform, Java-based, game development framework. It allows developers to write their code once and deploy to Windows, Linux, Mac, Android, iOS, and browsers. Libgdx takes care of platform-specific details so you can focus on what really matters, making awesome games and reaching the widest audience possible. Publishing your game on various platforms is quite a task, and this is where this book will come in handy.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}