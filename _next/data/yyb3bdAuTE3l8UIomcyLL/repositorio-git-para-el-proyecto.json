{"pageProps":{"metadata":{"path":"content/post/2010-07-15-repositorio-git-para-el-proyecto.mdx","title":"Repositorio Git para el proyecto","date":"2010-07-15T17:43:17.000Z","categories":["Games development"],"series":null,"description":null,"slug":"repositorio-git-para-el-proyecto","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/git.webp\",\n      alt: \"git.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Hasta ahora en los trabajos en los que he participado y que han requerido un sistema de control de versiones se ha utilizado \", _jsx(_components.a, {\n        href: \"http://es.wikipedia.org/wiki/Subversion\",\n        children: \"Subversion\"\n      }), \". Funciona de maravilla en grupos pequeños y cuenta con una curva de aprendizaje más que razonable. Cuando la elección del sistema de control de versiones para mi proyecto parecía estar clara ha surgido la idea de utilizar \", _jsx(_components.a, {\n        href: \"http://en.wikipedia.org/wiki/Git_%28software%29\",\n        children: \"Git\"\n      }), \" en su lugar.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Muchos compañeros en la Universidad me han hablado de sus virtudes y he seguido su consejo. Git tiene un enorme potencial e incita a ser ordenado a la hora de realizar commits. Aunque tendría que añadir una línea a la lista de tecnologías a dominar de cara al proyecto me he lanzado a la piscina creando un repositorio Git en \", _jsx(_components.a, {\n        href: \"http://gitorious.org/\",\n        children: \"Gitorious\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Para hacer clone simplemente:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-unknown\",\n        children: _jsx(_components.code, {\n          className: \"language-unknown\",\n          children: \"git clone git@gitorious.org:sion-tower/sion-tower.git\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Para ir aprendiendo estoy leyendo \", _jsx(_components.a, {\n        href: \"http://progit.org/book/\",\n        children: \"Pro Git\"\n      }), \", un libro excelente que explica detalladamente y de manera accesible tanto los conceptos como la forma de trabajar con Git. Se puede comprar una versión impresa aunque está disponible al completo en la página web.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Por ahora sólo está la planificación pero espero que en breve tenga más contenido.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}