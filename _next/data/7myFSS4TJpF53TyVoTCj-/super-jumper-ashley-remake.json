{"pageProps":{"metadata":{"path":"content/post/2014-07-27-super-jumper-ashley-remake.mdx","title":"Super Jumper Ashley remake","date":"2014-07-27T20:08:56.000Z","categories":["General"],"series":null,"description":null,"slug":"super-jumper-ashley-remake","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/super-jumper-ashley.webp\",\n      alt: \"super-jumper-ashley\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/dsaltares/ashley-superjumper\",\n        children: \"Ashley Super Jumper\"\n      }), \" has been my weekend project. It is nothing more than a clone of the \", _jsx(_components.a, {\n        href: \"https://github.com/libgdx/libgdx-demo-superjumper\",\n        children: \"Libgdx demo game\"\n      }), \". The catch is that it goes for an entity system approach rather than the classic inheritance model. Naturally, it uses Ashley.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The point was to have a reference project folks could check out in order to understand how entity systems in general and Ashley in particular work.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Maybe one day, I'll post a proper article explaining the design behind the entity systems at play in Super Jumper. I guess that could be useful.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}