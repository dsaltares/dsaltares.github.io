{"pageProps":{"metadata":{"path":"content/post/2014-07-22-libgdx-setup-tool-now-supports-ashley.mdx","title":"Libgdx setup tool now supports Ashley","date":"2014-07-22T18:00:08.000Z","categories":["Games development"],"series":null,"description":null,"slug":"libgdx-setup-tool-now-supports-ashley","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/gdx-setup-ashley.webp\",\n      alt: \"gdx-setup-ashley.png\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/libgdx/libgdx/commit/dfbb2dc4c5a146f5255bc358a7c8a591735bff3f\",\n        children: \"Last night\"\n      }), \" I added Ashley support to the official \", _jsx(_components.a, {\n        href: \"http://libgdx.badlogicgames.com/nightlies/dist/gdx-setup.jar\",\n        children: \"Libgdx setup tool\"\n      }), \". Creating Libgdx projects that use Ashley entity framework is now even easier. Simply make sure you tick the Ashley checkbox before generating your project.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By the way, if you already have a a project, adding the extra dependency is also trivial.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Core project: \", _jsx(_components.code, {\n          children: \"com.badlogicgames.ashley:ashley:1.0.1\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Android project: \", _jsx(_components.code, {\n          children: \"com.badlogicgames.ashley:ashley:1.0.1\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"GWT project: \", _jsx(_components.code, {\n          children: \"com.badlogicgames.ashley:ashley:1.0.1:sources\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Remember that using Ashley in non Libgdx projects is also perfectly fine.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}