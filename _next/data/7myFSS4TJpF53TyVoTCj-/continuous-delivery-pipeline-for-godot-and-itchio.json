{"pageProps":{"metadata":{"path":"content/post/2020-03-02-cd-pipeline-godot.mdx","title":"Continuous Delivery pipeline for Godot and itch.io","date":"2020-03-02T00:00:00.000Z","categories":["Games development"],"series":null,"description":"This tutorial helps you configure a continuous delivery pipeline for your Godot games to automatically publish to itch.io using Github Actions","slug":"continuous-delivery-pipeline-for-godot-and-itchio","readingTime":"5 min read","draft":false,"disableComments":false,"keywords":["godot engine","games development","CD for games","Github Actions"],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    img: \"img\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"During the recent \", _jsx(_components.a, {\n        href: \"/plague-godot-wild-jam-18/\",\n        children: \"Godot Wild Jam 18\"\n      }), \", I implemented a full \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/Continuous_delivery\",\n        children: \"Continuous Delivery\"\n      }), \" system to automatically publish \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18\",\n        children: \"Plague\"\n      }), \", our entry, on \", _jsx(_components.a, {\n        href: \"https://itch.io/\",\n        children: \"itch.io\"\n      }), \". The pipeline relies on Github Actions, the same \", _jsx(_components.a, {\n        href: \"easily-deploy-your-hugo-site-to-github-pages/\",\n        children: \"mechanism I use to build and deploy this very blog\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Setting up your own is easy peasy and possibly free!\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚öíÔ∏è Pipeline overview\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Someone pushes to the master branch on the remote repo.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The game is exported for all available platforms. In this case: Windows, Linux, MacOS and HTML5.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"A new Github release is created with attached files, one per platform.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The release artifacts are pushed as new versions of the game to itch.io.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/cd-godot-itch/pipeline.webp\",\n      children: _jsx(_components.img, {\n        src: \"/img/cd-godot-itch/pipeline.webp\",\n        alt: \"pipeline\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"ü§ñ Configure Godot exports\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First, you need to setup the export settings in your Godot project. The \", _jsx(_components.a, {\n        href: \"https://docs.godotengine.org/en/3.2/getting_started/workflow/export/exporting_projects.html\",\n        children: \"official exporting guide\"\n      }), \" explains it perfectly. The thing to keep in mind here is that the preset name will determine the name of the published artifact. For example, a preset called \", _jsx(_components.code, {\n        children: \"plague-mac\"\n      }), \" will result in a release with an attached file called \", _jsx(_components.code, {\n        children: \"plague-mac.zip\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In the case of our jam entry, we targeted MacOS, Windows, Linux and HTML5.\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/cd-godot-itch/godot-export-setup.gif\",\n      children: _jsx(_components.img, {\n        src: \"/img/cd-godot-itch/godot-export-setup.gif\",\n        alt: \"godot-export-setup\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"üì¶ Export the game\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/master/.github/workflows/export_game.yaml\",\n        children: _jsx(_components.code, {\n          children: \".github/workflows/export_game.yaml\"\n        })\n      }), \" file in your repo. We will tell our new action to run on every push to master. We don't want new releases on commits that do not actually change the game. Our Godot project lives in the \", _jsx(_components.code, {\n        children: \"game\"\n      }), \" folder, so we tell the action to only run if there are changes in that folder.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"push\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"branches\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" master\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"paths\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'game/**'\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the actual export step, we will leverage the \", _jsx(_components.a, {\n        href: \"https://github.com/firebelley/godot-export\",\n        children: \"Godot Export\"\n      }), \" Github action. The \", _jsx(_components.a, {\n        href: \"https://github.com/firebelley/godot-export/blob/master/README.md\",\n        children: _jsx(_components.code, {\n          children: \"README.md\"\n        })\n      }), \" explains its usage very well.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the action to work, you need to create a personal access token, which will give the export action write access to create a new release. First, \", _jsx(_components.a, {\n        href: \"https://github.com/settings/tokens\",\n        children: \"create a new token\"\n      }), \". Then go to \", _jsx(_components.code, {\n        children: \"https://github.com/<org>/<repo>/settings/secrets/new\"\n      }), \", paste the key and name the secret \", _jsx(_components.code, {\n        children: \"EXPORT_GITHUB_TOKEN\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here's our config in case it helps you. We setup the base version to be published, the links to download the Godot headless executable as well as the templates and tell it our project is located in the \", _jsx(_components.code, {\n        children: \"game\"\n      }), \" folder in the repo.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"jobs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"export_game\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"runs-on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ubuntu\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"latest\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Export game\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"steps\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" checkout\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" actions/checkout@v2.0.0\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" export\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" firebelley/godot\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"export@v1.1.0\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"with\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"base_version\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" 0.1.0\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"godot_executable_download_url\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" https\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"//downloads.tuxfamily.org/godotengine/3.2/Godot_v3.2\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"stable_linux_headless.64.zip\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"godot_export_templates_download_url\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" https\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"//downloads.tuxfamily.org/godotengine/3.2/Godot_v3.2\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"stable_export_templates.tpz\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"godot_template_version\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" 3.2.stable\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"relative_project_path\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ./game\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"env\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"GITHUB_TOKEN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" $\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" secrets.EXPORT_GITHUB_TOKEN \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Whenever you push these changes to your repo, you should already start seeing \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/actions\",\n        children: \"jobs being triggered\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/releases\",\n        children: \"releases being published\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/cd-godot-itch/export-job.webp\",\n      children: _jsx(_components.img, {\n        src: \"/img/cd-godot-itch/export-job.webp\",\n        alt: \"export-job\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"üö¢ Ship the game\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://itch.io/docs/butler/\",\n        children: \"Butler\"\n      }), \" is the itch.io CLI, which lets you upload builds of your game. Our publish Github action will need to talk to itch.io using a valid API key. In order to get one, \", _jsx(_components.a, {\n        href: \"https://itch.io/docs/butler/installing.html\",\n        children: \"install butler\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://itch.io/docs/butler/login.html#running-butler-from-ci-builds-travis-ci-gitlab-ci-etc\",\n        children: \"generate a key\"\n      }), \" via \", _jsx(_components.code, {\n        children: \"butler login\"\n      }), \". Refer to the docs for the details.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Then, copy your Butler API key and go to \", _jsx(_components.code, {\n        children: \"https://github.com/org/repo/settings/secrets\"\n      }), \" and create a \", _jsx(_components.code, {\n        children: \"BUTLER_CREDENTIALS\"\n      }), \" entry with the contents of the key.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now create a \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/master/.github/workflows/publish_game.yaml\",\n        children: _jsx(_components.code, {\n          children: \".github/workflows/publish_game.yaml\"\n        })\n      }), \" file in your repo. This action will run every time a new release is created or edited.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"release\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"types\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"created\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" edited\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Our workflow needs to contain a job per platform we want to publish. Each job will leverage the \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/fetch-gh-release-asset\",\n        children: \"Fetch GH Release Asset\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://github.com/josephbmanley/butler-publish-itchio-action\",\n        children: \"Butler Push\"\n      }), \" actions. We first download the latest release artifact for the platform we want to export and then we call the butler action to push the build to itch.io. When pushing multiple times to the \", _jsx(_components.code, {\n        children: \"windows\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://itch.io/docs/butler/pushing.html#channel-names\",\n        children: \"channel\"\n      }), \", each will be considered a new version of the same \\\"product.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here you can use the \", _jsx(_components.code, {\n        children: \"secrets.GITHUB_TOKEN\"\n      }), \", which is automatically populated.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"jobs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"release_windows\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"runs-on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ubuntu\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"latest\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"steps\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" download widows\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" dsaltares/fetch\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"gh\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"release\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"asset@master\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"with\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"file\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" plague\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"windows.zip\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"env\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"GITHUB_TOKEN\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'${{ secrets.GITHUB_TOKEN }}'\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" release windows\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" josephbmanley/butler\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"publish\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"itchio\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"action@master\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"env\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"BUTLER_CREDENTIALS\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" $\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" secrets.BUTLER_CREDENTIALS \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"CHANNEL\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" windows\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"ITCH_GAME\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" plague\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"ITCH_USER\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" dsaltares\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"PACKAGE\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" plague\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"windows.zip\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"That's it! Once you push the publish workflow and make a change to the game, Github will export, create a new release and update your game on itch.io.\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/cd-godot-itch/publish-job.webp\",\n      children: _jsx(_components.img, {\n        src: \"/img/cd-godot-itch/publish-job.webp\",\n        alt: \"publish-job\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On your itch.io game page, you should see something like:\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/cd-godot-itch/itch-downloads.webp\",\n      children: _jsx(_components.img, {\n        src: \"/img/cd-godot-itch/itch-downloads.webp\",\n        alt: \"itch-downloads\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"One last thing to remember is that you need to manually tag your HTML build as browser playable from the itch.io website as \", _jsx(_components.a, {\n        href: \"https://itch.io/docs/butler/pushing.html#html--playable-in-browser-games\",\n        children: \"specified in the Butler docs.\"\n      }), \". You will only need to do this once as long as future HTML builds have the same channel.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Advantages\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"‚è≥ Automated. Do not waste time exporting your game regularly and updating various stores.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üöÄ Fast. Exporting and publishing for a jam sized game takes only 2 minutes.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üé• Restrospect. Check out how your game looked at an arbitrary point in the past without opening the editor.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üí∞ Cost effective. You get unlimited GH Actions minutes for open source projects and 3000 minutes for the Pro plan. That could easily equal 600 builds a month!\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"ü§∏ Flexible. No need to publish on every push, you can change the triggers to publish on every push to a \", _jsx(_components.code, {\n          children: \"release\"\n        }), \" branch or simply on a fixed schedule.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üî≠ Extensible. Add jobs to publish to other stores or platforms.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It would be amazing if you let me know your thoughts on this solution. Maybe you have a much better automated process or ideas on how to improve this one!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}