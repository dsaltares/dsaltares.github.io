{"pageProps":{"metadata":{"path":"content/post/2022-01-03-nextauth-mailhog-local-development.mdx","title":"Improve your NextAuth.js app local development experience with a dockerized SMTP server","date":"2022-01-16T00:00:00.000Z","categories":["Development"],"series":null,"description":"Tutorial on how to improve your local development experience when using NextAuth.js by spinning up a MailHog SMTP server container.","slug":"improve-your-nextauthjs-app-local-development-experience-with-a-dockerized-smtp-server","readingTime":"3 min read","draft":false,"disableComments":false,"keywords":["local development","nextauth.js local development","mailhog testing SMTP server","docker SMTP server"],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/nextjs/nextauth.webp\",\n      alt: \"NextAuth.js logo\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://next-auth.js.org/\",\n        children: \"NextAuth.js\"\n      }), \" makes it shockingly easy to add authentication to \", _jsx(_components.a, {\n        href: \"https://nextjs.org/\",\n        children: \"Next.js\"\n      }), \" apps. It's free, open source, it lets you own your data and it supports a ton of identity providers, including \", _jsx(_components.a, {\n        href: \"https://en.wikipedia.org/wiki/One-time_password\",\n        children: \"one time passwords\"\n      }), \" or \\\"magic links\\\".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Working with NextAuth.js is trivial, it sounds too good to be true!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Of course, there is a catch...\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The developer experience worsens because you now need a network connection to log into your locally running app, even if your database is also local. Bye bye to chill sessions of working on the train.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can fix that with a local SMTP server! Let's see how we can set it up. I will be showing code samples, but you can find a full working example of this post \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/saltares-blog-examples/tree/main/nextauth-mailhog\",\n        children: \"here\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      children: [\"üîê Set up NextAuth.js with the \", _jsx(_components.code, {\n        children: \"EmailProvider\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Let's assume you already have a Next.js application. If you don't have NextAuth.js configured, the first thing is to follow the tutorial on their landing page. Then, set the \", _jsx(_components.code, {\n        children: \"EmailProvider\"\n      }), \" in \", _jsx(_components.code, {\n        children: \"/pages/api/auth/[...nextauth].js\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-ts\",\n        children: _jsxs(_components.code, {\n          className: \"language-ts\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" NextAuth \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'next-auth'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"import\"\n          }), \" EmailProvider \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"from\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'next-auth/providers/email'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\\n\", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"export\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"default\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"NextAuth\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n  providers\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"EmailProvider\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n      server\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n        host\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" process\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"EMAIL_SERVER_HOST\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n        port\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" process\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"EMAIL_SERVER_PORT\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n        auth\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n          user\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" process\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"EMAIL_SERVER_USER\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n          pass\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" process\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"env\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token constant\",\n            children: \"EMAIL_SERVER_PASSWORD\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n        \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n      from\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'NextAuth <noreply@example.com>'\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For the \", _jsx(_components.code, {\n        children: \"EmailProvider\"\n      }), \" to work, you also need to install the \", _jsx(_components.code, {\n        children: \"nodemailer\"\n      }), \" package.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [\"$ \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), \" nodemailer\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Remember that you also need to provide an \", _jsx(_components.a, {\n        href: \"https://next-auth.js.org/adapters/overview\",\n        children: \"Adapter\"\n      }), \" to NextAuth.js so that it can persist data. In \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/saltares-blog-examples/blob/main/nextauth-mailhog/pages/api/auth/%5B...nextauth%5D.js#L9\",\n        children: \"my example\"\n      }), \", I use the \", _jsx(_components.a, {\n        href: \"https://next-auth.js.org/adapters/prisma\",\n        children: _jsx(_components.code, {\n          children: \"PrismaAdapter\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"üì¨ Set up your local SMTP server\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We're going to use \", _jsx(_components.a, {\n        href: \"https://github.com/mailhog/MailHog\",\n        children: \"MailHog\"\n      }), \", an open source email testing tool that comes with an SMTP server you can run locally. Conveniently, they have a zero config Docker image!\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a \", _jsx(_components.code, {\n        children: \"docker-compose.yaml\"\n      }), \" file or update your existing one and define the MailHog service.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Using Docker Compose to run your database locally is a pretty good idea! In my \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/saltares-blog-examples/tree/main/nextauth-mailhog\",\n        children: \"example repo\"\n      }), \" I went for a containerised PostgreSQL database.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"version\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'3.9'\"\n          }), \"\\n\\n\", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"services\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"mailhog\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"image\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" mailhog/mailhog\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"logging\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"driver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"'none'\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# disable saving logs\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"ports\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" 1025\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"1025\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# smtp server\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" 8025\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"8025\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# web ui\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Add a couple of convenience scripts to your \", _jsx(_components.code, {\n        children: \"package.json\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-json\",\n        children: _jsxs(_components.code, {\n          className: \"language-json\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"scripts\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"docker:up\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"docker compose up -d\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token property\",\n            children: \"\\\"docker:down\\\"\"\n          }), _jsx(_components.span, {\n            className: \"token operator\",\n            children: \":\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token string\",\n            children: \"\\\"docker compose down\\\"\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Edit your local \", _jsx(_components.code, {\n        children: \".env\"\n      }), \" file to configure the NextAuth.js \", _jsx(_components.code, {\n        children: \"EmailProvider\"\n      }), \". Leave everything as below.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-unknown\",\n        children: _jsx(_components.code, {\n          className: \"language-unknown\",\n          children: \"EMAIL_SERVER_HOST=localhost\\nEMAIL_SERVER_PORT=1025\\nEMAIL_SERVER_USER=email-user\\nEMAIL_SERVER_PASSWORD=email-pass\"\n        })\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"üíª Local workflow\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Bring up your containers and start the local development server.\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-bash\",\n        children: _jsxs(_components.code, {\n          className: \"language-bash\",\n          children: [\"$ \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" docker:up \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"&&\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"yarn\"\n          }), \" dev\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Go to \", _jsx(_components.code, {\n        children: \"https://localhost:3000\"\n      }), \", click Sign in and enter your email.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/nextjs/nextauth-login.webp\",\n      alt: \"NextAuth.js login screen\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now you can open \", _jsx(_components.code, {\n        children: \"http://localhost:8025/\"\n      }), \" and see the email with the magic link.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/nextjs/mailhog.webp\",\n      alt: \"MailHog inbox\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"üéâ That's it, you can now manage authentication in your app and work locally without an internet connection.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}