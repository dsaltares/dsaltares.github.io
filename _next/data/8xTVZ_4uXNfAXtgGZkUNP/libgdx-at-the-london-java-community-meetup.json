{"pageProps":{"metadata":{"path":"content/post/2015-01-20-libgdx-at-the-london-java-community-meetup.mdx","title":"Libgdx at the London Java Community Meetup","date":"2015-01-20T13:26:29.000Z","categories":["General"],"series":null,"description":null,"slug":"libgdx-at-the-london-java-community-meetup","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/ljc.webp\",\n      alt: \"ljc.jpeg\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next Tuesday 3rd of February I will be talking about \", _jsx(_components.a, {\n        href: \"http://www.meetup.com/Londonjavacommunity/\",\n        children: \"Libgdx at the London Java Community Meetup\"\n      }), \". Things won't get too technical, I'll introduce the framework, explain why it's so awesome, show who is currently using it in commercial products and give a quick demo at the end. Of course I won't miss this golden opportunity to cheekily mention my \", _jsx(_components.a, {\n        href: \"/libgdx-cross-platform-game-development-cookbook/\",\n        children: \"Libgdx Cookbook\"\n      }), \"!\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you're interested, sign up and come to the \", _jsx(_components.a, {\n        href: \"https://www.google.com/maps?f=q&hl=en&q=116-120+Goswell+Road,+London,+gb\",\n        children: \"The Skills Matter eXchange\"\n      }), \", doors open at 6.15pm and the presentation should be around 40 minutes long.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}