{"pageProps":{"metadata":{"path":"content/post/2020-03-13-plague-godot-wild-jam-18-postmortem.mdx","title":"Plague: a Godot Wild Jam 18 game postmortem","date":"2020-03-13T00:00:00.000Z","categories":["Games development"],"series":null,"description":null,"slug":"plague-a-godot-wild-jam-18-game-postmortem","readingTime":"6 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {YouTube} = _components;\n  if (!YouTube) _missingMdxReference(\"YouTube\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/plague/header.png\",\n      alt: \"plague-banner\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"A few weeks ago, \", _jsx(_components.a, {\n        href: \"https://twitter.com/senthe\",\n        children: \"Jay Cano\"\n      }), \" and I took part in the week-long \", _jsx(_components.a, {\n        href: \"https://itch.io/jam/godot-wild-jam-18\",\n        children: \"Godot Wild Jam 18\"\n      }), \" and submitted \", _jsx(_components.a, {\n        href: \"https://dsaltares.itch.io/plague\",\n        children: \"Plague\"\n      }), \". Here are some of my personal thoughts on how we did and maybe some lessons for the future!\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"üìà Results\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Out of 43 submissions, we ranked 6th overall. That is the top 13th percentile. More importantly, we ranked 3th for fun or top 6th percentile. For the sake of comparison, \", _jsx(_components.a, {\n        href: \"game-jams/onederful-wizzard/\",\n        children: \"Onederful Wizard\"\n      }), \", which we submitted to the \", _jsx(_components.a, {\n        href: \"https://itch.io/jam/gmtk-2019\",\n        children: \"GMTK 2019\"\n      }), \", ranked 294 out of 2617 entries (top 11th percentile).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Even though both games received positive feedback, Plague ranked high for fun. We're very happy about that!\"\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/plague/jam-results.png\",\n      children: _jsx(_components.img, {\n        src: \"/img/plague/jam-results.png\",\n        alt: \"jam-results\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"üëç What went well\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Splitting tasks\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"During the previous jam, Jay and I rushed to implement features like crazy. Despite, Godot being very source control friendly, we ended up having to manually resolve too many merge conflicts.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This time we were much better organised and split tasks in a more consistent way.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"üëã David: player movement, enemy behaviour, individual game systems, menus and effects.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üëã Jay: procedural level generation, level section design, enemy/item spawning and putting it all together.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additionally, we both had separate \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/c2a13c5d40c06146a80b24380b4654cdcfcb5198/game/david/david_test.tscn\",\n        children: \"\\\"playground\\\" scenes\"\n      }), \" to test our work. We barely faced any merge conflicts!\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Platforming\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We got pretty good feedback for tight controls. Our \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/master/game/Player/Move.gd\",\n        children: \"player movement\"\n      }), \" is not too complex. For maximum control, we use a \", _jsx(_components.code, {\n        children: \"KinematicBody\"\n      }), \" rather than a \", _jsx(_components.code, {\n        children: \"RigidBody\"\n      }), \". We did a direct implementation of the formulas explained in the \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/watch?v=hG9SzQxaCm8\",\n        children: \"Building a Better Jump GDC talk\"\n      }), \".\"]\n    }), \"\\n\", _jsx(YouTube, {\n      videoId: \"hG9SzQxaCm8\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The proposal of the video is simple. The variables designers tweak to control character movement should not be \", _jsx(_components.code, {\n        children: \"gravity\"\n      }), \", \", _jsx(_components.code, {\n        children: \"acceleration\"\n      }), \", etc. They should be \", _jsx(_components.code, {\n        children: \"jump_height\"\n      }), \", \", _jsx(_components.code, {\n        children: \"jump_distance\"\n      }), \", \", _jsx(_components.code, {\n        children: \"time_to_jump_peak\"\n      }), \", \", _jsx(_components.code, {\n        children: \"time_to_max_speed\"\n      }), \", etc. It's much easier to reason about the distance a player can jump to build a level than the combination of gravity and other physics variables.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Additionally, we implemented a very simple \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/5da19b57e42014a3a9f26b64c782a51b5925a39c/game/Player/Air.gd#L33\",\n        children: \"Coyote Time\"\n      }), \". This gives players a grace period to jump even if the character has left a platform. Tiny thing, but it makes the experience a lot more responsive.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Procedural level generation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The game is a procedurally-generated infinite side-scroller. However, we do not procedurally place tiles. We have 8 hand crafted chunks. Then, the \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/blob/5da19b57e42014a3a9f26b64c782a51b5925a39c/game/Levels/InfiniteLevelManager.gd\",\n        children: _jsx(_components.code, {\n          children: \"InfiniteLevelManager\"\n        })\n      }), \" script is responsible for randomly selecting the next chunk as the player approaches the end of the current chunk. Finally, it populates the chunk with enemies and ammo pickups.\"]\n    }), \"\\n\", _jsx(_components.a, {\n      href: \"/img/plague/levelchunk.png\",\n      children: _jsx(_components.img, {\n        src: \"/img/plague/levelchunk.png\",\n        alt: \"level chunk\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This gave us an infinite scroller with a very simple procedural generation algorithm and super tight control over the end result. We even managed to progressively increase difficulty by spawning more and tougher enemies.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"With more time, we would have increased the variation and potentially procedurally place decoration on top of the blocks instead of having it built-in.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Re-using assets\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Jay and I are both engineers and not very good at art. It was a wise decision to leverage multiple asset packs. This led to good feedback on both audio and visuals.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"üîâ \", _jsx(_components.a, {\n          href: \"https://opengameart.org/content/512-sound-effects-8-bit-style\",\n          children: \"The Essential Retro Video Game Sound Effects Collection\"\n        }), \" by \", _jsx(_components.a, {\n          href: \"https://opengameart.org/users/subspaceaudio\",\n          children: \"SubSpaceAudio\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"üåé \", _jsx(_components.a, {\n          href: \"https://s4m-ur4i.itch.io/roguenoir-cyberpunk-assetpack-pixelart\",\n          children: \"Roguenoir Cyberpunk Assetpack\"\n        }), \" by \", _jsx(_components.a, {\n          href: \"https://s4m-ur4i.itch.io/\",\n          children: \"Sam\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"üéµ \", _jsx(_components.a, {\n          href: \"https://www.jamendo.com/track/1655535/dark-retrowave-cyberpunk\",\n          children: \"Dark Retrowave Cyberpunk\"\n        }), \" by \", _jsx(_components.a, {\n          href: \"https://www.jamendo.com/artist/486413/alexzavesa\",\n          children: \"Alex Zavesas\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"üåü \", _jsx(_components.a, {\n          href: \"https://www.kenney.nl/assets/particle-pack\",\n          children: \"Particle pack\"\n        }), \" by \", _jsx(_components.a, {\n          href: \"https://www.kenney.nl/\",\n          children: \"Kenney\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"üéÆ \", _jsx(_components.a, {\n          href: \"https://opengameart.org/content/free-keyboard-and-controllers-prompts-pack\",\n          children: \"Keyboard and controller prompts\"\n        }), \" by \", _jsx(_components.a, {\n          href: \"https://opengameart.org/users/xelu\",\n          children: \"Xelu\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are so many super high quality free assets, it's insane. If your jam allows it and you have a similar skillset to ours, go for it!\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Time for polish\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We dedicated a big chunk of the last day for polish and juiciness, which massively increased the game's perceived quality.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"üé• Camera shake for damage and bullet impacts.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"ü¶ò Coyote time for jumps.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üéÆ Gamepad controls. The game detects Xbox/PS4 controller or keyboard and shows different instructions in the main menu.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"‚õàÔ∏è Weather effects. We added rain, lightning and thunder that start at random intervals.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"üåü Particles and SFX for everything that happens in the game.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚úÖ Automatic deployment\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Right before the jam, I implemented a \", _jsx(_components.a, {\n        href: \"/continuous-delivery-pipeline-for-godot-and-itch.io/\",\n        children: \"Continuous Delivery pipeline\"\n      }), \" that exports the game and publishes to itch.io on every push to \", _jsx(_components.code, {\n        children: \"master\"\n      }), \". This completely removed the panic that typically happens when something goes wrong with game export right before the deadline.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"You can also \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares/godot-wild-jam-18/releases\",\n        children: \"go back in time\"\n      }), \" and see how the game looked at any point in time during development.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"üëé What went wrong\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚ùå Poor use of theme\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Due to some issues with the organisation, the theme announcement was delayed by half a day. Knowing that we weren't going to have much time to work on the game during the week, we started right away without a theme.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Unfortunately, we failed to go back to the theme and really incorporate it into the game. In the end, you can interpret that the monsters are the \\\"plague\\\". Other games like \", _jsx(_components.a, {\n        href: \"https://joel127.itch.io/harvestor-3000\",\n        children: \"Harvestor-3000\"\n      }), \" and \", _jsx(_components.a, {\n        href: \"https://heyyeh.itch.io/ceefax\",\n        children: \"Ceefax\"\n      }), \" made a much better use of the theme.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By the way, this is not a complaint about the organisation at all. We really appreciate their efforts to keep the jam going!\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚ùå Lack of end goal\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The infinite platformer concept made people feel a lack of purpose. We didn't save top scores, so there was obvious sense of improvement nor progression.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"An alternative may have been to introduce a final boss and an end-game after a fixed number of chunks. Lack of time!\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"‚ùå Yet another platformer\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The game is a simple platformer and the procedural generation was not enough to make it fresh. That is why we scored the lowest in originality, ranking 28th or 65th percentile.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In future jams, we should prioritize a differentiating feature and really go with it. Hopefully, foundational things like getting movement right will take less time going forward.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"‚úåÔ∏è Thanks!\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I had a blast participating in the jam. Thank you for reading this postmortem and thanks to everyone who played the game and gave us feedback.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}