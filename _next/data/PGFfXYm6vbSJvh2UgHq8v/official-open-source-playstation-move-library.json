{"pageProps":{"metadata":{"path":"content/post/2011-11-27-official-open-source-playstation-move-library.mdx","title":"Official open source PlayStation Move library","date":"2011-11-27T09:13:43.000Z","categories":["Games development"],"series":null,"description":null,"slug":"official-open-source-playstation-move-library","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/playstationmove.jpg\",\n      alt: \"playstationmove.jpg\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Just a quick update: Sony has released \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://code.google.com/p/moveme\",\n          children: \"moveme\"\n        })\n      }), \", an \", _jsx(_components.strong, {\n        children: \"official and open source PlayStation Move API\"\n      }), \" that enables developers to create Windows and Linux applications controlled using Sony's famous wand. You can read more about the library in the following paragraphs.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"They have published a \", _jsx(_components.strong, {\n        children: \"C/C++\"\n      }), \" version and a \", _jsx(_components.strong, {\n        children: \"C#\"\n      }), \" one. Within the Google Code repository you can find the sources for all the versions, some \", _jsx(_components.strong, {\n        children: \"sample programs\"\n      }), \" and a brief but \", _jsx(_components.strong, {\n        children: \"accessible documentation\"\n      }), \". This small API provides functions to connect with several PlayStation Move controllers; to get the wand's info such as position, orientation or button presses and even to manage rumble effects. It looks like Sony has published the library the proper way.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It's \", _jsx(_components.strong, {\n        children: \"surprising\"\n      }), \" that such a secretive company like Sony publishes a library to work with their proprietary controller. However, given the unofficial Kinect SDK situation, it's certainly more desirable providing your own version before the unofficial one comes around. Furthermore, no one can deny that Kinect SDK has given Microsoft's device more popularity across the Net.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It's a pity that I don't own one of these controllers. Otherwise I could maybe create a Move compatible version of \", _jsx(_components.a, {\n        href: \"/games/sion-tower/\",\n        title: \"Sion Tower\",\n        children: \"Sion Tower\"\n      }), \". Who knows?\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}