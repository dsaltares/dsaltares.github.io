{"pageProps":{"metadata":{"path":"content/post/2011-05-24-sion-tower-prueba-de-hechizos.mdx","title":"Sion Tower, prueba de hechizos","date":"2011-05-24T11:16:51.000Z","categories":["Games development"],"series":null,"description":null,"slug":"sion-tower-prueba-de-hechizos","readingTime":"1 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {YouTube} = _components;\n  if (!YouTube) _missingMdxReference(\"YouTube\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(YouTube, {\n      videoId: \"dNBw27ia_uE\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Este nuevo vídeo nos muestra \", _jsx(_components.strong, {\n        children: \"una prueba del sistema de lanzamiento de proyectiles mágicos en Sion Tower\"\n      }), \". El protagonista puede lanzar hechizos de varios tipos que impactan con los elementos sólidos del escenario produciendo una pequeña explosión. Para los efectos visuales se utiliza el \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"http://osl2.uca.es/iberogre/index.php/Sistemas_de_part%C3%ADculas\",\n          children: \"sistema de partículas de Ogre\"\n        })\n      }), \" y, aunque aún queda margen para la mejora, el resultado es aceptable. Sion Tower cuenta con un sistema de audio 3D pero no se han incluido efectos ya que estoy a la espera del colaborador encargado de dicho apartado.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"¡Próximamente más novedades!\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","scope":{}},"series":null},"__N_SSG":true}