{"pageProps":{"metadata":{"path":"content/post/2020-01-17-hugo-gh-pages-workflow.mdx","title":"Easily deploy your Hugo site to Github Pages","date":"2020-01-17T00:00:00.000Z","categories":["General"],"series":null,"description":null,"slug":"easily-deploy-your-hugo-site-to-github-pages","readingTime":"4 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\",\n    img: \"img\",\n    div: \"div\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"I had been using a \", _jsx(_components.a, {\n        href: \"https://www.digitalocean.com/products/droplets/\",\n        children: \"DigitalOcean\"\n      }), \" droplet to host this blog and personal projects for years. But... Do I really need to spend the $6/month? It's just a static \", _jsx(_components.a, {\n        href: \"https://gohugo.io/\",\n        children: \"Hugo\"\n      }), \" site, which \", _jsx(_components.a, {\n        href: \"https://pages.github.com/\",\n        children: \"Github pages\"\n      }), \" can do for free. Game hosting on \", _jsx(_components.a, {\n        href: \"https://david-saltares.itch.io/\",\n        children: \"itch.io\"\n      }), \" is also free, it even gives you a mechanism to embed your web games. Looks like I'd be sorted!\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's a simple CD workflow for deploying a Huge site to Github pages.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Setup your production Github pages repo\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a Github repo with the name \", _jsx(_components.code, {\n        children: \"<username>.github.io\"\n      }), \". Make sure it has a \", _jsx(_components.code, {\n        children: \"README.md\"\n      }), \" so that you can start pushing to it. Anything pushed to this repo will be accessible from \", _jsx(_components.code, {\n        children: \"http://<username>.github.io\"\n      }), \". This will be your production repository. If you have a PRO Github account, you can make the repo private. This means users will be able to access the \", _jsx(_components.code, {\n        children: \"github.io\"\n      }), \" site but not the repo sources.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/production-repo.png\",\n      alt: \"dsaltares.github.io\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Create your dev repository\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a new repo to host your dev Hugo site from which we will deploy to the production repo. Name it something like \", _jsx(_components.code, {\n        children: \"<username>.github.io-dev\"\n      }), \". That's where you will write your Hugo pages in Markdown.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/dev-repo.png\",\n      alt: \"dsaltares.github.io-dev\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Configure the CD pipeline\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Whenever we push to our dev repo, we will build the site and deploy it to the production repo. For that, we will leverage \", _jsx(_components.a, {\n        href: \"https://github.com/features/actions\",\n        children: \"Github Actions\"\n      }), \". For the dev repo to publish to the production repo, we need them to exchange keys.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Generate a public/private key pair.\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-unknown\",\n        children: _jsx(_components.code, {\n          className: \"language-unknown\",\n          children: \"ssh-keygen -t rsa -b 4096 -C &quot;&lt;email&gt;&quot; -f publish_key -P &quot;&quot;\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, go to the production repo Settings, Deploy keys and paste the contents of \", _jsx(_components.code, {\n        children: \"publish_key.pub\"\n      }), \" here.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/deploy-keys.png\",\n      alt: \"deploy_keys\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Go to the dev repo Settings, Secrets and add a new secret called \", _jsx(_components.code, {\n        children: \"ACTIONS_DEPLOY_KEY\"\n      }), \" with the contents of the \", _jsx(_components.code, {\n        children: \"publish_key\"\n      }), \" file.\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/secrets.png\",\n      alt: \"secrets\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Create a \", _jsx(_components.code, {\n        children: \".github/workflows/deploy.yml\"\n      }), \" file in your dev repo with the following contents:\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-yaml\",\n        children: _jsxs(_components.code, {\n          className: \"language-yaml\",\n          children: [_jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Build and deploy\\n\\n\", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"push\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"branches\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" master\\n\\n\", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"jobs\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"build\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"runs-on\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ubuntu\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"latest\\n    \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"steps\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Checkout\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" actions/checkout@v1\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Setup Hugo\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" peaceiris/actions\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"hugo@v2\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Build\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"run\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" hugo\\n      \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"name\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" Deploy\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"uses\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" peaceiris/actions\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"gh\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"-\"\n          }), \"pages@v2\\n        \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"env\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"EXTERNAL_REPOSITORY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" <username\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          }), \"/<repository\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \">\"\n          }), \".github.io\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"ACTIONS_DEPLOY_KEY\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" $\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \" secrets.ACTIONS_DEPLOY_KEY \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"PUBLISH_BRANCH\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" master\\n          \", _jsx(_components.span, {\n            className: \"token key atrule\",\n            children: \"PUBLISH_DIR\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \":\"\n          }), \" ./public\\n\"]\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After you push this file and every time you push to dev, the \", _jsx(_components.code, {\n        children: \"Build and Deploy\"\n      }), \" action will be triggered. It will checkout the dev repo, install the latest Hugo binary, build your site and deploy to the master branch of your production repo. Once it's done, the latest version of your site will be available on \", _jsx(_components.code, {\n        children: \"https://<username>.github.io\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/actions.png\",\n      alt: \"actions\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Even though my blog contains hundreds of posts, images and files, \", _jsx(_components.code, {\n        children: \"Build and Deploy\"\n      }), \" takes less than 1 minute!\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Make your domain point to your Github Pages\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Obviously, this step only applies if you have your own domain. Go to your provider's admin panel and change your domain's DNS records.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Enter 4 \", _jsx(_components.code, {\n          children: \"A\"\n        }), \" records with \", _jsx(_components.code, {\n          children: \"@\"\n        }), \" hosts and the Github Pages IPs:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"185.199.108.153\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"185.199.109.153\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"185.199.110.153\"\n            })\n          }), \"\\n\", _jsx(_components.li, {\n            children: _jsx(_components.code, {\n              children: \"185.199.111.153\"\n            })\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Enter a \", _jsx(_components.code, {\n          children: \"CNAME\"\n        }), \" record with \", _jsx(_components.code, {\n          children: \"www\"\n        }), \" and value \", _jsx(_components.code, {\n          children: \"<username>.github.io\"\n        }), \".\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The screenshot below shows the Namecheap DNS config panel for my account.\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/dns-config.png\",\n      alt: \"dsaltares.github.io\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Finally, go to your dev repo and create a \", _jsx(_components.code, {\n        children: \"static/CNAME\"\n      }), \" file with your domain name. For example, mine contains:\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-unknown\",\n        children: _jsx(_components.code, {\n          className: \"language-unknown\",\n          children: \"saltares.com\"\n        })\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once that is done and deployed to production, you should see the following in your production repository Settings, inside the Github Pages section. Tick the \\\"Enforce HTTPS\\\" to redirect all traffic from \", _jsx(_components.code, {\n        children: \"http://<domain>\"\n      }), \" to \", _jsx(_components.code, {\n        children: \"https://<domain>\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/gh-pages-workflow/gh-pages-section.png\",\n      alt: \"gh-pages-section\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Note that this may take up to 24h to work as your new DNS settings propagate, so be patient!\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Done!\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It takes some setup but the result is a pretty convenient workflow, definitely an improvement over the \", _jsx(_components.a, {\n        href: \"/general/migration-from-wordpress-to-hugo/\",\n        children: \"git hook based setup\"\n      }), \" I had before.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let me know if you have any issues with this!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}