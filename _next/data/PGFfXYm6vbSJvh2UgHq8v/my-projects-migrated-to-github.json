{"pageProps":{"metadata":{"path":"content/post/2012-11-05-my-projects-migrated-to-github.mdx","title":"My projects migrated to GitHub","date":"2012-11-05T23:09:42.000Z","categories":["Projects"],"series":null,"description":null,"slug":"my-projects-migrated-to-github","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.img, {\n      src: \"/img/wp/github_logo_social_coding_outlined.png\",\n      alt: \"github_logo_social_coding_outlined.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I've been a busy bee lately but here it comes yet another post with a piece of not so relevant news related to my projects.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Even though I've always been kind of sceptical about GitHub, I've finally decided to migrate most of my projects. After getting a bit deeper into the libgdx community over there, I've come to see the benefits of this self proclaimed social coding platform. Forking, pulling and giving/receiving feedback is easy and motivating (kind of a must when working on side projects). This way I\\\"ll also force myself to use Git, which is full of love and we\\\"re here to learn aren't we?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I've successfully exported the following projects, now available from my \", _jsx(_components.a, {\n        href: \"https://github.com/dsaltares\",\n        children: \"profile\"\n      }), \":\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dsaltares/glapse\",\n          children: \"gLapse\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dsaltares/urbanrace\",\n          children: \"Urban Race\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/dsaltares/freegemas-gdx\",\n          children: \"Freegemas gdx\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In order to carry out the migration whilst keeping the full commit history I've used \", _jsx(_components.a, {\n        href: \"https://github.com/nirvdrum/svn2git\",\n        children: \"svn2git\"\n      }), \". It's just a ridiculously easy to use Ruby script built upon the git svn tool. I could write a post on how to do it, but it\\\"d be pointless since it's very well detailed in the project's readme.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Expect updates soonish!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}