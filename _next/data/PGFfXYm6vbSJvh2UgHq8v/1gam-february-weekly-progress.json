{"pageProps":{"metadata":{"path":"content/post/2013-02-10-1gam-february-weekly-progress.mdx","title":"#1GAM February: weekly progress","date":"2013-02-10T18:46:43.000Z","categories":["Games development"],"series":null,"description":null,"slug":"1gam-february-weekly-progress","readingTime":"2 min read","draft":false,"disableComments":false,"keywords":[],"banner":null},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [\"One week ago I posted about the \", _jsx(_components.a, {\n        href: \"/games/1gam-february-game-design/\",\n        children: \"initial game design for my February One Game A Month entry\"\n      }), \". I believe, it's time to report back with the work I've done during the past seven days. Actually, I've realised how good an incentive is to leave written proof of what you intend to do in advance, forcing yourself to deliver just to avoid the public humiliation.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"What I have so far\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Without further ado, here's the update.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Started a \", _jsx(_components.a, {\n          href: \"https://github.com/dsaltares/rescuecopter\",\n          children: \"GitHub repo\"\n        }), \".\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Integrated my codebase with some improvements across the board: engine facade, ID generator, i18n support, animated sprites, physics objects.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Integrated the \", _jsx(_components.a, {\n          href: \"https://github.com/libgdx/libgdx/tree/mapsapi/gdx/src/com/badlogic/gdx/maps\",\n          children: \"mapsapi libgdx branch\"\n        }), \" to do some further testing on my Gleed system. Found a bug and already \", _jsx(_components.a, {\n          href: \"https://github.com/libgdx/libgdx/pull/237\",\n          children: \"pull requested the fix\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Component based entity system with an \", _jsx(_components.a, {\n          href: \"https://code.google.com/p/artemis-framework/\",\n          children: \"Artemis\"\n        }), \" like API but fully compatible with the GWT backend. Nice thing is, it enforces garbage collector friendliness (through entity and component pooling). I\\\"ll talk more about it on a different post.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Static bodies creation from map's shape data and material system. This might as well deserve another post, why the hell not!\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"/img/wp/abduction-progress.jpg\",\n      alt: \"abduction-progress.jpg\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Coming this week\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I hereby make the compromise of delivering the following within a week.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Spaceship entity with controls.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Camera movement behavior.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Collision handlers for the spaceship.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Foreground shapes set.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's leave it at that and stay realistic.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"And now for something completely different\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I've deleted my SionEngine repository from GitHub as I don't feel it meets the appropriate quality standards just yet. I will surely continue developing its components along every One Game a Month project, which, as you can see, will be open source too. I never pretended it to be a killer engine of any sort, this is just my codebase and a way of developing my software design skills.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"See you guys next week.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","scope":{}},"series":null},"__N_SSG":true}